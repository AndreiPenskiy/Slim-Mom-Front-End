{"version":3,"file":"static/js/main-page.5c7b9701.chunk.js","mappings":"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","sources":["components/DailyCaloriesForm/DailyCaloriesForm.styled.jsx","components/DailyCaloriesForm/DailyCaloriesForm.js","components/Background/Background.styled.jsx","components/Background/Background.js","pages/MainPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nexport const DailyCaloriesContainer = styled.div`\n  @media screen and (min-width: 320px) {\n    width: 320px;\n    padding: 0 20px;\n    height: 100%;\n    margin: 0 auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 0 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding: 0 16px;\n  }\n`;\nexport const DailyCaloriesFormContainer = styled.div`\n  width: 280px;\n  margin-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 704px;\n    margin-top: 100px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 608px;\n    margin-top: 147px;\n  }\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n`;\n\nexport const FieldStyled = styled(Field)`\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  width: 240px;\n  margin-top: 0px;\n  font-size: 8px;\n\n  :focus {\n    outline: none;\n    border-bottom: 1px solid #fc842d;\n\n    + label {\n      color: #fc842d;\n      font-size: 10px;\n      margin-bottom: 5px;\n      margin-top: -5px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 0px;\n    margin-right: 30px;\n    margin-bottom: 20px;\n    font-size: 14px;\n\n    font-family: 'Verdana';\n    font-size: 14px;\n    :focus {\n      outline: none;\n      border-bottom: 1px solid #fc842d;\n\n      + label {\n        color: #fc842d;\n        font-size: 10px;\n        margin-bottom: 10px;\n        margin-top: -10px;\n      }\n    }\n  }\n`;\n\nexport const FieldStyledMobil = styled.div`\n  display: flex;\n  flex-flow: column-reverse;\n  border: none;\n  margin-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n    width: 240px;\n  }\n`;\n\nexport const FieldStyledTab = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    display: flex;\n    flex-flow: column-reverse;\n    margin-top: 30px;\n  }\n`;\n\nexport const FieldRadioGrup = styled(Field)`\n  align-items: baseline;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  width: 240px;\n  margin-top: 30px;\n`;\n\nexport const RadioStyled = styled.input`\n  appearance: none;\n  background-color: #fff;\n  margin: 0;\n  margin-right: 4px;\n  font: inherit;\n  color: currentColor;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 50%;\n  display: grid;\n  place-content: center;\n  ::before {\n    content: '';\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em #fc842d;\n  }\n  :checked::before {\n    transform: scale(1);\n  }\n`;\n\nexport const DailyCaloriesFormTitle = styled.h1`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 26px;\n  color: #212121;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 36px;\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 34px;\n    line-height: 41px;\n  }\n`;\n\nexport const DailyCaloriesFormButton = styled.button`\n  padding: 13px 37px 13px 37px;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  display: block;\n  align-items: center;\n  text-align: center;\n  text-decoration: none;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n  color: #fc842d;\n  background: #ffffff;\n  border: 2px solid #fc842d;\n  border-radius: 30px;\n  margin: auto;\n  margin-top: 40px;\n  transition: transform 500ms linear;\n\n  :hover,\n  :focus {\n    /* padding: 13px 51px 13px 50px; */\n    color: #ffffff;\n    background-color: #fc842d;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n    border-radius: 30px;\n    transform: scale(0.9);\n  }\n  @media screen and (min-width: 768px) {\n    margin: 0;\n    margin-top: 60px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: auto;\n    margin-top: 60px;\n  }\n`;\n\nexport const ButtonCont = styled.div`\n  width: 100%;\n`;\n\nexport const ErrorMessageContainer = styled.div`\n  position: absolute;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 17px;\n  color: rgb(217 120 74);\n  margin: -17px;\n  padding-left: 16px;\n  @media screen and (min-width: 768px) {\n    margin: 0px;\n    padding-left: 0px;\n  }\n`;\n\nexport const Radiolabel = styled.label`\n  display: flex;\n  align-items: baseline;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-top: 8px;\n`;\n\nexport const RadioGrupLabel = styled.div`\n  display: flex;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  width: 240px;\n  justify-content: space-between;\n  margin-top: 8px;\n\n  @media screen and (min-width: 768px) {\n    border-top: 1px solid #e0e0e0;\n  }\n`;\nexport const Label = styled.label`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 20px;\n  display: block;\n  @media screen and (max-width: 767px) {\n    margin-bottom: 8px;\n  }\n`;\nexport const InputLabel = styled.label`\n  font-family: Verdana;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  margin-top: 32px;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  DailyCaloriesContainer,\n  DailyCaloriesFormContainer,\n  DailyCaloriesFormTitle,\n  DailyCaloriesFormButton,\n  FieldStyled,\n  Label,\n  InputLabel,\n  InputContainer,\n  FieldStyledTab,\n  FieldStyledMobil,\n  FieldRadioGrup,\n  RadioGrupLabel,\n  RadioStyled,\n  Radiolabel,\n  FormStyled,\n  ButtonCont,\n  ErrorMessageContainer,\n} from './DailyCaloriesForm.styled';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n// eslint-disable-next-line no-unused-vars\nimport i18n from 'utils/i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { caloriesCalculator } from 'redux/products/products-operation';\nimport { setTempParameters, refreshParameters } from 'redux/auth/auth-options';\nimport { getUser } from 'redux/auth/auth-selectors';\nimport { toggleLoading } from 'redux/loader/spinner-slice';\n\nexport const DailyCaloriesForm = ({ publicPage }) => {\n  let navigate = useNavigate();\n  const dispath = useDispatch();\n  const { t } = useTranslation();\n  const user = useSelector(getUser);\n  const loading = useSelector(toggleLoading);\n\n  const initialValues = user.parameters\n    ? user.parameters\n    : {\n        height: '',\n        age: '',\n        currentWeight: '',\n        desiredWeight: '',\n        bloodType: '1',\n      };\n\n  const DailyCaloriesSchema = Yup.object().shape({\n    height: Yup.number()\n      .positive()\n      .min(100, `${t('validationDiaryForm.label1')}`)\n      .max(250, `${t('validationDiaryForm.label2')}`)\n      .integer(`${t('validationDiaryForm.label3')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    age: Yup.number()\n      .min(18, `${t('validationDiaryForm.label5')}`)\n      .max(100, `${t('validationDiaryForm.label6')}`)\n      .integer(`${t('validationDiaryForm.label7')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    currentWeight: Yup.number()\n      .min(20, `${t('validationDiaryForm.label8')}`)\n      .max(500, `${t('validationDiaryForm.label9')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    desiredWeight: Yup.number()\n      .min(20, `${t('validationDiaryForm.label10')}`)\n      .max(500, `${t('validationDiaryForm.label11')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    bloodType: Yup.number()\n      .oneOf([1, 2, 3, 4])\n      .required(`${t('validationDiaryForm.label4')}`),\n  });\n\n  const handleSubmit = async parameters => {\n    dispath(loading);\n    if (publicPage) {\n      await dispath(caloriesCalculator({ parameters }));\n      await dispath(setTempParameters(parameters));\n    } else {\n      await dispath(refreshParameters({ parameters }));\n      navigate('/diary');\n    }\n    dispath(loading);\n  };\n  return (\n    <DailyCaloriesContainer>\n      <DailyCaloriesFormContainer>\n        <DailyCaloriesFormTitle>\n          {t('dailyCalorieForm.title')}\n        </DailyCaloriesFormTitle>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={DailyCaloriesSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched }) => (\n            <FormStyled>\n              <InputContainer>\n                <FieldStyled name=\"height\" type=\"number\" autoComplete=\"off\" />\n                <InputLabel>{t('dailyCalorieForm.label_1')}</InputLabel>\n                {errors.height && touched.height ? (\n                  <ErrorMessageContainer>{errors.height}</ErrorMessageContainer>\n                ) : null}\n              </InputContainer>\n              <FieldStyledTab>\n                <FieldStyled\n                  name=\"desiredWeight\"\n                  type=\"number\"\n                  autoComplete=\"off\"\n                />\n                <InputLabel>{t('dailyCalorieForm.label_4')}</InputLabel>\n\n                {errors.desiredWeight && touched.desiredWeight ? (\n                  <ErrorMessageContainer>\n                    {errors.desiredWeight}\n                  </ErrorMessageContainer>\n                ) : null}\n              </FieldStyledTab>\n              <InputContainer>\n                <FieldStyled name=\"age\" type=\"number\" autoComplete=\"off\" />\n                <InputLabel>{t('dailyCalorieForm.label_2')}</InputLabel>\n\n                {errors.age && touched.age ? (\n                  <ErrorMessageContainer>{errors.age}</ErrorMessageContainer>\n                ) : null}\n              </InputContainer>\n\n              <FieldStyledMobil>\n                <FieldStyled\n                  name=\"currentWeight\"\n                  type=\"number\"\n                  autoComplete=\"off\"\n                />\n                <InputLabel>{t('dailyCalorieForm.label_3')}</InputLabel>\n\n                {errors.currentWeight && touched.currentWeight ? (\n                  <ErrorMessageContainer>\n                    {errors.currentWeight}\n                  </ErrorMessageContainer>\n                ) : null}\n              </FieldStyledMobil>\n\n              <FieldStyledMobil>\n                <FieldStyled\n                  name=\"desiredWeight\"\n                  type=\"number\"\n                  autoComplete=\"off\"\n                />\n                <InputLabel>{t('dailyCalorieForm.label_4')}</InputLabel>\n\n                {errors.desiredWeight && touched.desiredWeight ? (\n                  <ErrorMessageContainer>\n                    {errors.desiredWeight}\n                  </ErrorMessageContainer>\n                ) : null}\n              </FieldStyledMobil>\n\n              <FieldRadioGrup\n                component=\"div\"\n                name=\"bloodType\"\n                label=\"bloodType\"\n              >\n                <Label> {t('dailyCalorieForm.label_5')}</Label>\n                <RadioGrupLabel>\n                  <Radiolabel htmlFor=\"bloodType\">\n                    <RadioStyled\n                      type=\"radio\"\n                      name=\"bloodType\"\n                      id=\"1\"\n                      defaultChecked\n                      value=\"1\"\n                    />\n                    1\n                  </Radiolabel>\n                  <Radiolabel htmlFor=\"bloodType\">\n                    <RadioStyled\n                      type=\"radio\"\n                      name=\"bloodType\"\n                      id=\"2\"\n                      value=\"2\"\n                    />\n                    2\n                  </Radiolabel>\n                  <Radiolabel htmlFor=\"bloodType\">\n                    <RadioStyled\n                      type=\"radio\"\n                      name=\"bloodType\"\n                      id=\"3\"\n                      value=\"3\"\n                    />\n                    3\n                  </Radiolabel>\n                  <Radiolabel htmlFor=\"bloodType\">\n                    <RadioStyled\n                      type=\"radio\"\n                      name=\"bloodType\"\n                      id=\"4\"\n                      value=\"4\"\n                    />\n                    4\n                  </Radiolabel>\n                </RadioGrupLabel>\n              </FieldRadioGrup>\n\n              <FieldStyledTab>\n                <FieldStyled\n                  name=\"currentWeight\"\n                  type=\"number\"\n                  autoComplete=\"off\"\n                />\n                <InputLabel>{t('dailyCalorieForm.label_3')}</InputLabel>\n\n                {errors.currentWeight && touched.currentWeight ? (\n                  <ErrorMessageContainer>\n                    {errors.currentWeight}\n                  </ErrorMessageContainer>\n                ) : null}\n              </FieldStyledTab>\n\n              <ButtonCont>\n                <DailyCaloriesFormButton type=\"submit\">\n                  {t('dailyCalorieForm.btn_name')}\n                </DailyCaloriesFormButton>\n              </ButtonCont>\n            </FormStyled>\n          )}\n        </Formik>\n      </DailyCaloriesFormContainer>\n    </DailyCaloriesContainer>\n  );\n};\n","import styled from 'styled-components';\nimport BackgroundStr from './backgroundImages/str.png';\nimport BackgroundL from './backgroundImages/l.png';\nimport BackgroundB from './backgroundImages/b.png';\nimport BackgroundV from './backgroundImages/v.png';\nimport BackgroundStrTab from './backgroundImages/strtab.png';\nimport BackgroundLTab from './backgroundImages/ltab.png';\nimport BackgroundBTab from './backgroundImages/btab.png';\nimport BackgroundVTab from './backgroundImages/vtab.png';\n\nexport const BackgroundImage = styled.div`\n  display: none;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: -1000;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    min-height: 1024px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    min-height: 850px;\n  }\n`;\n\nexport const S = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${BackgroundStrTab});\n    display: block;\n    position: absolute;\n    background-repeat: no-repeat;\n    background-size: contain;\n    top: 564px;\n    right: 65px;\n    width: 265px;\n    height: 273px;\n    z-index: 2;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${BackgroundStr});\n    top: 458px;\n    right: 2px;\n    width: 362px;\n    height: 374px;\n    z-index: 2;\n  }\n`;\n\nexport const L = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${BackgroundLTab});\n    display: block;\n    position: absolute;\n    background-repeat: no-repeat;\n    background-size: 602px 531px;\n    top: 482px;\n    width: 531px;\n    height: 602px;\n    z-index: 3;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${BackgroundL});\n    background-size: 746px;\n    top: 0;\n    right: 195px;\n    width: 746px;\n    height: 846px;\n    z-index: 3;\n  }\n`;\nexport const B = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    display: block;\n    background-image: url(${BackgroundBTab});\n    background-size: contain;\n    background-repeat: no-repeat;\n    top: 533px;\n    right: -212px;\n    width: 740px;\n    height: 527px;\n    z-index: 3;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${BackgroundB});\n    background-size: unset;\n    top: -30px;\n    right: -287px;\n    width: 773px;\n    height: 552px;\n    z-index: 2;\n  }\n`;\n\nexport const V = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${BackgroundVTab});\n    display: block;\n    position: absolute;\n    background-repeat: no-repeat;\n    top: 428px;\n    right: -0px;\n    width: 553px;\n    height: 750px;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${BackgroundV});\n    top: 34px;\n    right: 0;\n    width: 603px;\n    height: 816px;\n    z-index: 1;\n  }\n`;\n","import { S, L, B, V, BackgroundImage } from './Background.styled';\n\nexport const Background = () => {\n  return (\n    <BackgroundImage>\n      <S />\n      <L />\n      <B />\n      <V />\n    </BackgroundImage>\n  );\n};\n","import React from 'react';\nimport { Background } from 'components/Background/Background';\nimport { DailyCaloriesForm } from '../components/DailyCaloriesForm/DailyCaloriesForm';\n\nconst MainPage = () => {\n  return (\n    <>\n      <DailyCaloriesForm publicPage={true} />\n      <Background />\n    </>\n  );\n};\n\nexport default MainPage;\n"],"names":["DailyCaloriesContainer","styled","DailyCaloriesFormContainer","FormStyled","Form","FieldStyled","Field","FieldStyledMobil","FieldStyledTab","FieldRadioGrup","RadioStyled","DailyCaloriesFormTitle","DailyCaloriesFormButton","ButtonCont","ErrorMessageContainer","Radiolabel","RadioGrupLabel","Label","InputLabel","InputContainer","DailyCaloriesForm","publicPage","navigate","useNavigate","dispath","useDispatch","t","useTranslation","user","useSelector","getUser","loading","toggleLoading","initialValues","parameters","height","age","currentWeight","desiredWeight","bloodType","DailyCaloriesSchema","Yup","shape","positive","min","max","integer","required","oneOf","handleSubmit","caloriesCalculator","setTempParameters","refreshParameters","validationSchema","onSubmit","errors","touched","name","type","autoComplete","component","label","htmlFor","id","defaultChecked","value","BackgroundImage","S","BackgroundStrTab","BackgroundStr","L","BackgroundLTab","BackgroundL","B","BackgroundBTab","BackgroundB","V","BackgroundVTab","BackgroundV","Background"],"sourceRoot":""}