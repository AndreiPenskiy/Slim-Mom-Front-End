{"version":3,"file":"static/js/calculator-page.7369992c.chunk.js","mappings":"2RAEaA,EAAyBC,EAAAA,GAAAA,IAAH,4UAkBtBC,EAA6BD,EAAAA,GAAAA,IAAH,0QAe1BE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,0FAMVI,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,+uBAwCXM,EAAmBN,EAAAA,GAAAA,IAAH,sMAYhBO,EAAiBP,EAAAA,GAAAA,IAAH,2LAWdQ,GAAiBR,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,uPAadS,EAAcT,EAAAA,GAAAA,MAAH,giBA2BXU,EAAyBV,EAAAA,GAAAA,GAAH,gWAiBtBW,EAA0BX,EAAAA,GAAAA,OAAH,43BAwCvBY,EAAaZ,EAAAA,GAAAA,IAAH,wCAIVa,EAAwBb,EAAAA,GAAAA,IAAH,6TAgBrBc,EAAad,EAAAA,GAAAA,MAAH,uPAaVe,EAAiBf,EAAAA,GAAAA,IAAH,sWAiBdgB,EAAQhB,EAAAA,GAAAA,MAAH,0SAcLiB,EAAajB,EAAAA,GAAAA,MAAH,qLASVkB,EAAiBlB,EAAAA,GAAAA,IAAH,kG,wFClPdmB,EAAoB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC9BC,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,eACRC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAOC,EAAAA,EAAAA,aAAYC,EAAAA,IACnBC,GAAUF,EAAAA,EAAAA,aAAYG,EAAAA,IAEtBC,EAAgBL,EAAKM,WACvBN,EAAKM,WACL,CACEC,OAAQ,GACRC,IAAK,GACLC,cAAe,GACfC,cAAe,GACfC,UAAW,KAGXC,EAAsBC,EAAAA,KAAaC,MAAM,CAC7CP,OAAQM,EAAAA,KACLE,WACAC,IAAI,IAFC,UAEOlB,EAAE,gCACdmB,IAAI,IAHC,UAGOnB,EAAE,gCACdoB,QAJK,UAIMpB,EAAE,gCACbqB,SALK,UAKOrB,EAAE,gCACjBU,IAAKK,EAAAA,KACFG,IAAI,GADF,UACSlB,EAAE,gCACbmB,IAAI,IAFF,UAEUnB,EAAE,gCACdoB,QAHE,UAGSpB,EAAE,gCACbqB,SAJE,UAIUrB,EAAE,gCACjBW,cAAeI,EAAAA,KACZG,IAAI,GADQ,UACDlB,EAAE,gCACbmB,IAAI,IAFQ,UAEAnB,EAAE,gCACdqB,SAHY,UAGArB,EAAE,gCACjBY,cAAeG,EAAAA,KACZG,IAAI,GADQ,UACDlB,EAAE,iCACbmB,IAAI,IAFQ,UAEAnB,EAAE,iCACdqB,SAHY,UAGArB,EAAE,gCACjBa,UAAWE,EAAAA,KACRO,MAAM,CAAC,EAAG,EAAG,EAAG,IAChBD,SAFQ,UAEIrB,EAAE,kCAGbuB,EAAY,mCAAG,WAAMf,GAAN,oEACnBV,EAAQO,IACJV,EAFe,gCAGXG,GAAQ0B,EAAAA,EAAAA,GAAmB,CAAEhB,WAAAA,KAHlB,uBAIXV,GAAQ2B,EAAAA,EAAAA,IAAkBjB,IAJf,+CAMXV,GAAQ4B,EAAAA,EAAAA,IAAkB,CAAElB,WAAAA,KANjB,QAOjBZ,EAAS,UAPQ,QASnBE,EAAQO,GATW,4CAAH,sDAWlB,OACE,SAAC/B,EAAD,WACE,UAACE,EAAD,YACE,SAACS,EAAD,UACGe,EAAE,6BAEL,SAAC,KAAD,CACEO,cAAeA,EACfoB,iBAAkBb,EAClBc,SAAUL,EAHZ,SAKG,gBAAGM,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAACrD,EAAD,YACE,UAACgB,EAAD,YACE,SAACd,EAAD,CAAaoD,KAAK,SAASC,KAAK,SAASC,aAAa,SACtD,SAACzC,EAAD,UAAaQ,EAAE,8BACd6B,EAAOpB,QAAUqB,EAAQrB,QACxB,SAACrB,EAAD,UAAwByC,EAAOpB,SAC7B,SAEN,UAAC3B,EAAD,YACE,SAACH,EAAD,CACEoD,KAAK,gBACLC,KAAK,SACLC,aAAa,SAEf,SAACzC,EAAD,UAAaQ,EAAE,8BAEd6B,EAAOjB,eAAiBkB,EAAQlB,eAC/B,SAACxB,EAAD,UACGyC,EAAOjB,gBAER,SAEN,UAACnB,EAAD,YACE,SAACd,EAAD,CAAaoD,KAAK,MAAMC,KAAK,SAASC,aAAa,SACnD,SAACzC,EAAD,UAAaQ,EAAE,8BAEd6B,EAAOnB,KAAOoB,EAAQpB,KACrB,SAACtB,EAAD,UAAwByC,EAAOnB,MAC7B,SAGN,UAAC7B,EAAD,YACE,SAACF,EAAD,CACEoD,KAAK,gBACLC,KAAK,SACLC,aAAa,SAEf,SAACzC,EAAD,UAAaQ,EAAE,8BAEd6B,EAAOlB,eAAiBmB,EAAQnB,eAC/B,SAACvB,EAAD,UACGyC,EAAOlB,gBAER,SAGN,UAAC9B,EAAD,YACE,SAACF,EAAD,CACEoD,KAAK,gBACLC,KAAK,SACLC,aAAa,SAEf,SAACzC,EAAD,UAAaQ,EAAE,8BAEd6B,EAAOjB,eAAiBkB,EAAQlB,eAC/B,SAACxB,EAAD,UACGyC,EAAOjB,gBAER,SAGN,UAAC7B,EAAD,CACEmD,UAAU,MACVH,KAAK,YACLI,MAAM,YAHR,WAKE,UAAC5C,EAAD,eAASS,EAAE,gCACX,UAACV,EAAD,YACE,UAACD,EAAD,CAAY+C,QAAQ,YAApB,WACE,SAACpD,EAAD,CACEgD,KAAK,QACLD,KAAK,YACLM,GAAG,IACHC,gBAAc,EACdC,MAAM,MANV,QAUA,UAAClD,EAAD,CAAY+C,QAAQ,YAApB,WACE,SAACpD,EAAD,CACEgD,KAAK,QACLD,KAAK,YACLM,GAAG,IACHE,MAAM,MALV,QASA,UAAClD,EAAD,CAAY+C,QAAQ,YAApB,WACE,SAACpD,EAAD,CACEgD,KAAK,QACLD,KAAK,YACLM,GAAG,IACHE,MAAM,MALV,QASA,UAAClD,EAAD,CAAY+C,QAAQ,YAApB,WACE,SAACpD,EAAD,CACEgD,KAAK,QACLD,KAAK,YACLM,GAAG,IACHE,MAAM,MALV,cAYJ,UAACzD,EAAD,YACE,SAACH,EAAD,CACEoD,KAAK,gBACLC,KAAK,SACLC,aAAa,SAEf,SAACzC,EAAD,UAAaQ,EAAE,8BAEd6B,EAAOlB,eAAiBmB,EAAQnB,eAC/B,SAACvB,EAAD,UACGyC,EAAOlB,gBAER,SAGN,SAACxB,EAAD,WACE,SAACD,EAAD,CAAyB8C,KAAK,SAA9B,SACGhC,EAAE,8C,4VC3NRwC,GAAqBjE,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uUAiBlBkE,GAAyBlE,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,4uBAQf,SAAAmE,GAAK,OAAKA,EAAMC,SAAW,OAAS,UA4B3CC,EAAkCrE,EAAAA,GAAAA,IAAH,mYAoB/BsE,GAAuBtE,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,2sBAKb,SAAAmE,GAAK,OAAKA,EAAMC,SAAW,OAAS,UA8B3CG,EAAgCvE,EAAAA,GAAAA,IAAH,mYAmB7BwE,EAA2BxE,EAAAA,GAAAA,IAAH,mJAQxByE,EAAkBzE,EAAAA,GAAAA,OAAH,ipBAGN,SAAAmE,GAAK,OAAKA,EAAMC,SAAW,OAAS,aACtC,SAAAD,GAAK,OAAKA,EAAMC,SAAW,OAAS,UAgBhC,SAAAD,GAAK,OAAKA,EAAMC,SAAW,OAAS,aACtC,SAAAD,GAAK,OAAKA,EAAMC,SAAW,OAAS,UAW7CM,EAA0B1E,EAAAA,GAAAA,IAAH,kGAOvB2E,EAA8B3E,EAAAA,GAAAA,MAAH,sEAK3B4E,EAA4B5E,EAAAA,GAAAA,MAAH,+CAIzB6E,EAAY7E,EAAAA,GAAAA,EAAH,qO,oOC/JP,SAAS8E,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQ1D,GAAMC,EAAAA,EAAAA,KAAND,EAEF2D,GAAaxD,EAAAA,EAAAA,aAAYyD,EAAAA,IACzBC,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MACrCC,GAAe7D,EAAAA,EAAAA,aAAY8D,EAAAA,GAC3BC,GACJ,IAAIC,MAAOC,mBAAmB,WAC9B,IAAID,KAAKH,GAAcI,mBAAmB,SAC5C,GAAsBC,EAAAA,EAAAA,MAAfC,GAAP,eAEMC,EAAmB,SAACC,EAAOC,EAAQC,GACvCA,EAAaF,GACb,MAAsBA,EAAMG,OAAtB5C,EAAN,EAAMA,KAAMQ,EAAZ,EAAYA,MACZ,OAAQR,GACN,IAAK,UACH,OAAOyB,EAAWjB,GACpB,IAAK,QACH,OAAOmB,EAASnB,GAClB,QACE,MAAM,IAAIqC,QAIVC,EAAY,SAAC,GAAc,IAAZ9C,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACN+C,OAAQ,SAAAC,GAAO,OAAI,SAAC,IAAD,UAAYA,QAK/BC,EAAwBjE,EAAAA,KAAaC,MAAM,CAC/CuC,QAASxC,EAAAA,KAAaM,SAASrB,EAAE,+BACjCyD,MAAO1C,EAAAA,KACJG,IAAI,EAAGlB,EAAE,gCACTmB,IAAI,IAAMnB,EAAE,gCACZqB,SAASrB,EAAE,iCAUhB,OACE,gCACG2D,GAAcE,IACb,SAAC,KAAD,CAAYoB,GAAG,SAAf,UACE,SAAC,MAAD,CAAyBC,KAAM,QAGnC,SAAC,KAAD,CACE3E,cAAe,CACbgD,QAAS,GACTE,MAAO,IAET9B,iBAAkBqD,EAClBpD,SAnBe,SAAAuD,GACnBb,EAAY,CAAEf,QAAAA,EAASE,MAAAA,IACvBD,EAAW,IACXE,EAAS,IACTyB,KASE,SAQG,cAAGX,MAAH,EAAUC,OAAV,IAAkBC,EAAlB,EAAkBA,aAAlB,OACC,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CACErC,GAAG,UACHN,KAAK,UACLE,aAAa,MACbU,SAAUuB,EACVkB,SAAU,SAAAZ,GACRD,EAAiBC,EAAOC,EAAQC,IAElCnC,MAAOgB,KAET,SAAC,KAAD,CAA6BnB,QAAQ,UAArC,SACGpC,EAAE,yBAEJuD,IACC,SAAC,IAAD,CACEA,QAASA,EACTC,WAAYA,KAGhB,SAACqB,EAAD,CAAW9C,KAAK,gBAElB,UAAC,KAAD,YACE,SAAC,KAAD,CACEM,GAAG,QACHN,KAAK,QACLE,aAAa,MACbmD,SAAU,SAAAZ,GACRD,EAAiBC,EAAOC,EAAQC,IAElCnC,MAAOkB,EACPd,SAAUuB,KAEZ,SAAC,KAAD,CAA2B9B,QAAQ,QAAnC,SACGpC,EAAE,0BAEL,SAAC6E,EAAD,CAAW9C,KAAK,cAElB,SAAC,KAAD,WACE,SAAC,KAAD,CAAiBC,KAAK,SAASW,SAAUuB,EAAzC,SACGlE,EAAE,oC,8GCpINqF,EAAmC9G,EAAAA,GAAAA,IAAH,+CAIhC+G,EAA0B/G,EAAAA,GAAAA,GAAH,0iB,SCC7B,SAASgH,EAAT,GAAqD,IAAxBhC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAC7BgC,GAAgBC,EAAAA,EAAAA,IAAuBlC,GAA7CmC,KACR,GAAwBpC,EAAAA,EAAAA,WAAS,GAAjC,eAAOqC,EAAP,KAAaC,EAAb,KAOA,OACE,SAACP,EAAD,UACGM,GAAQH,IACP,SAACF,EAAD,UACGE,EAAYK,KAAI,SAAAtC,GAAO,OACtB,eAEEuC,QAAS,kBAZG,SAAAvC,GACtBC,EAAWD,GACXqC,GAAQ,GAUiBG,CAAgBxC,EAAQyC,MAAMC,KAF/C,SAIG1C,EAAQyC,MAAMC,IAHV1C,EAAQ2C,c,4ICjBdC,EAAmB5H,EAAAA,GAAAA,IAAH,6iBASD6H,EAYAC,GAMfC,EAAY/H,EAAAA,GAAAA,IAAH,yaAwBTgI,EAAUhI,EAAAA,GAAAA,IAAH,wQAcPiI,EAAQjI,EAAAA,GAAAA,GAAH,uQAgBLkI,EAAOlI,EAAAA,GAAAA,GAAH,sBAEJmI,EAAWnI,EAAAA,GAAAA,GAAH,wSAkBRoI,EAAkBpI,EAAAA,GAAAA,IAAH,iK,sCCtFfqI,EAAe,WAE1B,OAA0BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BC,EAAR,EAAQA,KACA/G,GADR,EAAcgH,SACA/G,EAAAA,EAAAA,KAAND,GAEAiH,GAAS9G,EAAAA,EAAAA,cAAY,SAAA+G,GAAK,OAAIA,EAAMC,SAApCF,KACFG,EAAgB,IAAIjD,KAAK8C,GAAM7C,qBAE/BiD,GAAelH,EAAAA,EAAAA,aAAYC,EAAAA,IAASkH,SACpCC,GAAgBpH,EAAAA,EAAAA,aAAYC,EAAAA,IAASoH,mBAE3C,OAGE,SAACrB,EAAD,WACE,UAACG,EAAD,YACE,UAACC,EAAD,YACE,UAACC,EAAD,WACGxG,EAAE,yBADL,IACgCoH,EAAe,QAE/C,UAACX,EAAD,YACE,UAACC,EAAD,YACE,0BAAO1G,EAAE,2BACT,gCAAQ+G,EAAOU,OAAOJ,GAAgBN,EAAO,IAA7C,IAAoD/G,EAAE,8BAExD,UAAC0G,EAAD,YACE,0BAAO1G,EAAE,2BACT,gCAAQ+G,GAAc,IAAtB,IAA6B/G,EAAE,8BAEjC,UAAC0G,EAAD,YACE,0BAAO1G,EAAE,2BACT,4BACoB,OAAjBqH,EAAA,eAAkCA,EAAlC,KACArH,EAAE,8BAGP,UAAC0G,EAAD,YACE,0BAAO1G,EAAE,2BACT,gCAAQ+G,EAAOW,KAAKC,MAAOZ,EAAKU,OAAOJ,GAAiB,KAAO,EAA/D,kBAIN,4BACE,SAACb,EAAD,UAAQxG,EAAE,4BACV,SAAC2G,EAAD,UAC6B,KAAb,OAAbY,QAAa,IAAbA,OAAA,EAAAA,EAAeK,SACd,0BACG,IADH,OAEGL,QAFH,IAEGA,OAFH,EAEGA,EAAe1B,KAAI,SAACtC,EAASsE,GAAV,OAClB,wBAAiBtE,GAARsE,SAIb7H,EAAE,oC,qEC5DhB,UATuB,WACnB,OACI,iCACI,SAAC,IAAD,CAAmBL,YAAY,KAC/B,SAAC,IAAD,S,qDCNZ,IAAMsE,EAAU,SAAAiD,GAAK,OAAIA,EAAMC,MAAMF,O","sources":["components/DailyCaloriesForm/DailyCaloriesForm.styled.jsx","components/DailyCaloriesForm/DailyCaloriesForm.js","components/DiaryAddProductForm/DiaryAddProductForm.styled.jsx","components/DiaryAddProductForm/DiaryFormProductMobile.jsx","components/DiaryAddProductForm/DiaryListProducts.styled.jsx","components/DiaryAddProductForm/DiaryListProducts.jsx","components/RightSideBar/RightSideBar.styled.js","components/RightSideBar/RightSideBar.jsx","pages/CalculatorPage.jsx","redux/diary/diary-selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nexport const DailyCaloriesContainer = styled.div`\n  height: 100%;\n  @media screen and (max-width: 767px) {\n    width: 320px;\n    padding: 0 20px;\n    margin: 0 auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 0 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding: 0 16px;\n  }\n`;\nexport const DailyCaloriesFormContainer = styled.div`\n  width: 280px;\n  margin-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 704px;\n    margin-top: 100px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 608px;\n    margin-top: 147px;\n  }\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n`;\n\nexport const FieldStyled = styled(Field)`\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  width: 240px;\n  margin-top: 0px;\n  font-size: 8px;\n\n  :focus {\n    outline: none;\n    border-bottom: 1px solid #fc842d;\n\n    + label {\n      color: #fc842d;\n      font-size: 10px;\n      margin-bottom: 5px;\n      margin-top: -5px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 0px;\n    margin-right: 30px;\n    margin-bottom: 20px;\n    font-size: 14px;\n\n    font-family: 'Verdana';\n    font-size: 14px;\n    :focus {\n      outline: none;\n      border-bottom: 1px solid #fc842d;\n\n      + label {\n        color: #fc842d;\n        font-size: 10px;\n        margin-bottom: 10px;\n        margin-top: -10px;\n      }\n    }\n  }\n`;\n\nexport const FieldStyledMobil = styled.div`\n  display: flex;\n  flex-flow: column-reverse;\n  border: none;\n  margin-top: 32px;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n    width: 240px;\n  }\n`;\n\nexport const FieldStyledTab = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    display: flex;\n    flex-flow: column-reverse;\n    margin-top: 30px;\n  }\n`;\n\nexport const FieldRadioGrup = styled(Field)`\n  align-items: baseline;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  width: 240px;\n  margin-top: 30px;\n`;\n\nexport const RadioStyled = styled.input`\n  appearance: none;\n  background-color: #fff;\n  margin: 0;\n  margin-right: 4px;\n  font: inherit;\n  color: currentColor;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 50%;\n  display: grid;\n  place-content: center;\n  ::before {\n    content: '';\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em #fc842d;\n  }\n  :checked::before {\n    transform: scale(1);\n  }\n`;\n\nexport const DailyCaloriesFormTitle = styled.h1`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 26px;\n  color: #212121;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 36px;\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 34px;\n    line-height: 41px;\n  }\n`;\n\nexport const DailyCaloriesFormButton = styled.button`\n  padding: 13px 37px 13px 37px;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  display: block;\n  align-items: center;\n  text-align: center;\n  text-decoration: none;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n  color: #fc842d;\n  background: #ffffff;\n  border: 2px solid #fc842d;\n  border-radius: 30px;\n  margin: auto;\n  margin-top: 40px;\n  transition: transform 500ms linear;\n\n  :hover,\n  :focus {\n    /* padding: 13px 51px 13px 50px; */\n    color: #ffffff;\n    background-color: #fc842d;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n    border-radius: 30px;\n    transform: scale(0.9);\n  }\n  @media screen and (min-width: 768px) {\n    margin: 0;\n    margin-top: 60px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: auto;\n    margin-top: 60px;\n  }\n`;\n\nexport const ButtonCont = styled.div`\n  width: 100%;\n`;\n\nexport const ErrorMessageContainer = styled.div`\n  position: absolute;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 17px;\n  color: rgb(217 120 74);\n  margin: -17px;\n  padding-left: 16px;\n  @media screen and (min-width: 768px) {\n    margin: 0px;\n    padding-left: 0px;\n  }\n`;\n\nexport const Radiolabel = styled.label`\n  display: flex;\n  align-items: baseline;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-top: 8px;\n`;\n\nexport const RadioGrupLabel = styled.div`\n  display: flex;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  width: 240px;\n  justify-content: space-between;\n  margin-top: 8px;\n\n  @media screen and (min-width: 768px) {\n    border-top: 1px solid #e0e0e0;\n  }\n`;\nexport const Label = styled.label`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 20px;\n  display: block;\n  @media screen and (max-width: 767px) {\n    margin-bottom: 8px;\n  }\n`;\nexport const InputLabel = styled.label`\n  font-family: Verdana;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  margin-top: 32px;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  DailyCaloriesContainer,\n  DailyCaloriesFormContainer,\n  DailyCaloriesFormTitle,\n  DailyCaloriesFormButton,\n  FieldStyled,\n  Label,\n  InputLabel,\n  InputContainer,\n  FieldStyledTab,\n  FieldStyledMobil,\n  FieldRadioGrup,\n  RadioGrupLabel,\n  RadioStyled,\n  Radiolabel,\n  FormStyled,\n  ButtonCont,\n  ErrorMessageContainer,\n} from './DailyCaloriesForm.styled';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n// eslint-disable-next-line no-unused-vars\nimport i18n from 'utils/i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { caloriesCalculator } from 'redux/products/products-operation';\nimport { setTempParameters, refreshParameters } from 'redux/auth/auth-options';\nimport { getUser } from 'redux/auth/auth-selectors';\nimport { toggleLoading } from 'redux/loader/spinner-slice';\n\nexport const DailyCaloriesForm = ({ publicPage }) => {\n  let navigate = useNavigate();\n  const dispath = useDispatch();\n  const { t } = useTranslation();\n  const user = useSelector(getUser);\n  const loading = useSelector(toggleLoading);\n\n  const initialValues = user.parameters\n    ? user.parameters\n    : {\n        height: '',\n        age: '',\n        currentWeight: '',\n        desiredWeight: '',\n        bloodType: '1',\n      };\n\n  const DailyCaloriesSchema = Yup.object().shape({\n    height: Yup.number()\n      .positive()\n      .min(100, `${t('validationDiaryForm.label1')}`)\n      .max(250, `${t('validationDiaryForm.label2')}`)\n      .integer(`${t('validationDiaryForm.label3')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    age: Yup.number()\n      .min(18, `${t('validationDiaryForm.label5')}`)\n      .max(100, `${t('validationDiaryForm.label6')}`)\n      .integer(`${t('validationDiaryForm.label7')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    currentWeight: Yup.number()\n      .min(20, `${t('validationDiaryForm.label8')}`)\n      .max(500, `${t('validationDiaryForm.label9')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    desiredWeight: Yup.number()\n      .min(20, `${t('validationDiaryForm.label10')}`)\n      .max(500, `${t('validationDiaryForm.label11')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    bloodType: Yup.number()\n      .oneOf([1, 2, 3, 4])\n      .required(`${t('validationDiaryForm.label4')}`),\n  });\n\n  const handleSubmit = async parameters => {\n    dispath(loading);\n    if (publicPage) {\n      await dispath(caloriesCalculator({ parameters }));\n      await dispath(setTempParameters(parameters));\n    } else {\n      await dispath(refreshParameters({ parameters }));\n      navigate('/diary');\n    }\n    dispath(loading);\n  };\n  return (\n    <DailyCaloriesContainer>\n      <DailyCaloriesFormContainer>\n        <DailyCaloriesFormTitle>\n          {t('dailyCalorieForm.title')}\n        </DailyCaloriesFormTitle>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={DailyCaloriesSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched }) => (\n            <FormStyled>\n              <InputContainer>\n                <FieldStyled name=\"height\" type=\"number\" autoComplete=\"off\" />\n                <InputLabel>{t('dailyCalorieForm.label_1')}</InputLabel>\n                {errors.height && touched.height ? (\n                  <ErrorMessageContainer>{errors.height}</ErrorMessageContainer>\n                ) : null}\n              </InputContainer>\n              <FieldStyledTab>\n                <FieldStyled\n                  name=\"desiredWeight\"\n                  type=\"number\"\n                  autoComplete=\"off\"\n                />\n                <InputLabel>{t('dailyCalorieForm.label_4')}</InputLabel>\n\n                {errors.desiredWeight && touched.desiredWeight ? (\n                  <ErrorMessageContainer>\n                    {errors.desiredWeight}\n                  </ErrorMessageContainer>\n                ) : null}\n              </FieldStyledTab>\n              <InputContainer>\n                <FieldStyled name=\"age\" type=\"number\" autoComplete=\"off\" />\n                <InputLabel>{t('dailyCalorieForm.label_2')}</InputLabel>\n\n                {errors.age && touched.age ? (\n                  <ErrorMessageContainer>{errors.age}</ErrorMessageContainer>\n                ) : null}\n              </InputContainer>\n\n              <FieldStyledMobil>\n                <FieldStyled\n                  name=\"currentWeight\"\n                  type=\"number\"\n                  autoComplete=\"off\"\n                />\n                <InputLabel>{t('dailyCalorieForm.label_3')}</InputLabel>\n\n                {errors.currentWeight && touched.currentWeight ? (\n                  <ErrorMessageContainer>\n                    {errors.currentWeight}\n                  </ErrorMessageContainer>\n                ) : null}\n              </FieldStyledMobil>\n\n              <FieldStyledMobil>\n                <FieldStyled\n                  name=\"desiredWeight\"\n                  type=\"number\"\n                  autoComplete=\"off\"\n                />\n                <InputLabel>{t('dailyCalorieForm.label_4')}</InputLabel>\n\n                {errors.desiredWeight && touched.desiredWeight ? (\n                  <ErrorMessageContainer>\n                    {errors.desiredWeight}\n                  </ErrorMessageContainer>\n                ) : null}\n              </FieldStyledMobil>\n\n              <FieldRadioGrup\n                component=\"div\"\n                name=\"bloodType\"\n                label=\"bloodType\"\n              >\n                <Label> {t('dailyCalorieForm.label_5')}</Label>\n                <RadioGrupLabel>\n                  <Radiolabel htmlFor=\"bloodType\">\n                    <RadioStyled\n                      type=\"radio\"\n                      name=\"bloodType\"\n                      id=\"1\"\n                      defaultChecked\n                      value=\"1\"\n                    />\n                    1\n                  </Radiolabel>\n                  <Radiolabel htmlFor=\"bloodType\">\n                    <RadioStyled\n                      type=\"radio\"\n                      name=\"bloodType\"\n                      id=\"2\"\n                      value=\"2\"\n                    />\n                    2\n                  </Radiolabel>\n                  <Radiolabel htmlFor=\"bloodType\">\n                    <RadioStyled\n                      type=\"radio\"\n                      name=\"bloodType\"\n                      id=\"3\"\n                      value=\"3\"\n                    />\n                    3\n                  </Radiolabel>\n                  <Radiolabel htmlFor=\"bloodType\">\n                    <RadioStyled\n                      type=\"radio\"\n                      name=\"bloodType\"\n                      id=\"4\"\n                      value=\"4\"\n                    />\n                    4\n                  </Radiolabel>\n                </RadioGrupLabel>\n              </FieldRadioGrup>\n\n              <FieldStyledTab>\n                <FieldStyled\n                  name=\"currentWeight\"\n                  type=\"number\"\n                  autoComplete=\"off\"\n                />\n                <InputLabel>{t('dailyCalorieForm.label_3')}</InputLabel>\n\n                {errors.currentWeight && touched.currentWeight ? (\n                  <ErrorMessageContainer>\n                    {errors.currentWeight}\n                  </ErrorMessageContainer>\n                ) : null}\n              </FieldStyledTab>\n\n              <ButtonCont>\n                <DailyCaloriesFormButton type=\"submit\">\n                  {t('dailyCalorieForm.btn_name')}\n                </DailyCaloriesFormButton>\n              </ButtonCont>\n            </FormStyled>\n          )}\n        </Formik>\n      </DailyCaloriesFormContainer>\n    </DailyCaloriesContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const DiaryFormConteiner = styled(Form)`\n  display: flex;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n\n  @media screen and (max-width: 767px) {\n    margin-left: 20px;\n    padding-top: 80px;\n    flex-direction: column;\n  }\n`;\n\nexport const DiaryFormProductStyled = styled(Field)`\n  height: 20px;\n  width: 240px;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  border-top: transparent;\n  border-left: transparent;\n  border-right: transparent;\n  pointer-events: ${props => (props.disabled ? 'none' : 'auto')};\n  :focus {\n    outline: none;\n    border-bottom: 1px solid #fc842d;\n\n    + label {\n      color: #fc842d;\n      font-size: 10px;\n      margin-bottom: 10px;\n      margin-top: -10px;\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 280px;\n    // margin-bottom: 32px;\n    /* ::placeholder {\n      font-family: 'Verdana';\n      font-style: normal;\n      font-weight: 700;\n      font-size: 14px;\n      line-height: 17px;\n      letter-spacing: 0.04em;\n      color: #9b9faa; */\n    /* } */\n  }\n`;\n\nexport const DiaryFormProductConteinerStyled = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  width: 240px;\n  /* position: relative; */\n  margin-right: 50px;\n  /* ::after {\n    position: absolute;\n    content: '';\n    display: block;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n    border: 1px solid #e0e0e0;\n  } */\n  @media screen and (max-width: 767px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const DiaryFormGramsStyled = styled(Field)`\n  height: 20px;\n  width: 107px;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  pointer-events: ${props => (props.disabled ? 'none' : 'auto')};\n  border-top: transparent;\n  border-left: transparent;\n  border-right: transparent;\n  @media screen and (max-width: 767px) {\n    width: 280px;\n  }\n  /* ::placeholder {\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    color: #9b9faa;\n    text-align: end;\n  } */\n  :focus {\n    outline: none;\n    border-bottom: 1px solid #fc842d;\n\n    + label {\n      color: #fc842d;\n      font-size: 10px;\n      margin-bottom: 10px;\n      margin-top: -10px;\n    }\n  }\n`;\n\nexport const DiaryFormGramsConteinerStyled = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  width: 107px;\n  /* position: relative; */\n  margin-right: 60px;\n  @media screen and (max-width: 767px) {\n    margin-bottom: 60px;\n  }\n  /* ::after {\n    position: absolute;\n    content: '';\n    display: block;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n    border: 1px solid #e0e0e0;\n  } */\n`;\nexport const DiaryFormButtonConteiner = styled.div`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const DiaryFormButton = styled.button`\n  width: 48px;\n  height: 48px;\n  background-color: ${props => (props.disabled ? '#eee' : '#fc842d')};\n  pointer-events: ${props => (props.disabled ? 'none' : 'auto')};\n  border-radius: 50%;\n  cursor: pointer;\n  border: none;\n  transition: transform 500ms linear;\n  :hover {\n    transform: scale(1.1);\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 176px;\n    height: 44px;\n    left: 72px;\n    top: 340px;\n    border-radius: 30px;\n    background-color: ${props => (props.disabled ? '#eee' : '#fc842d')};\n    pointer-events: ${props => (props.disabled ? 'none' : 'auto')};\n\n    font-family: 'Verdana';\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    color: #ffffff;\n  }\n`;\n\nexport const DiaryProductsPlusStyled = styled.img`\n  margin-left: 6px;\n  width: 24px;\n  height: 24px;\n  font-size: bold;\n`;\n\nexport const DiaryFormProductLabelStyled = styled.label`\n  // width: 107px;\n  // margin-right: 73px;\n`;\n\nexport const DiaryFormGramsLabelStyled = styled.label`\n  margin-right: 54px;\n`;\n\nexport const ErrorText = styled.p`\n  position: absolute;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 17px;\n  color: rgb(217 120 74);\n  margin: -17px;\n  padding-left: 16px;\n`;\n","import { useCreateProductsMutation } from '../../redux/productsApi';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { useTranslation } from 'react-i18next';\nimport { MdOutlineKeyboardReturn } from 'react-icons/md';\nimport {\n  DiaryFormConteiner,\n  DiaryFormProductStyled,\n  DiaryFormGramsStyled,\n  DiaryFormProductConteinerStyled,\n  DiaryFormGramsConteinerStyled,\n  DiaryFormButton,\n  DiaryFormProductLabelStyled,\n  DiaryFormGramsLabelStyled,\n  DiaryFormButtonConteiner,\n  ErrorText,\n} from './DiaryAddProductForm.styled';\nimport { StyledLink } from 'components/UserInfo/UserInfo.styled';\nimport { getLoggedIn } from 'redux/auth/auth-selectors';\nimport { getDate } from 'redux/diary/diary-selectors';\nimport { useState } from 'react';\nimport { DiaryListProducts } from './DiaryListProducts';\n// eslint-disable-next-line no-unused-vars\nimport i18n from 'utils/i18next';\n\nexport default function DiaryAddProductForm() {\n  const [product, setProduct] = useState('');\n  const [grams, setGrams] = useState('');\n  const { t } = useTranslation();\n\n  const isLoggedIn = useSelector(getLoggedIn);\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const selectedDate = useSelector(getDate);\n  const isDisabled =\n    new Date().toLocaleDateString('fr-ca') !==\n    new Date(selectedDate).toLocaleDateString('fr-ca');\n  const [addProducts] = useCreateProductsMutation();\n\n  const handleChangeForm = (event, values, handleChange) => {\n    handleChange(event);\n    let { name, value } = event.target;\n    switch (name) {\n      case 'product':\n        return setProduct(value);\n      case 'grams':\n        return setGrams(value);\n      default:\n        throw new Error();\n    }\n  };\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      ></ErrorMessage>\n    );\n  };\n\n  const DiaryAddProductSchema = Yup.object().shape({\n    product: Yup.string().required(t('validationDiaryForm.label4')),\n    grams: Yup.number()\n      .min(1, t('validationDiaryForm.label12'))\n      .max(1000, t('validationDiaryForm.label13'))\n      .required(t('validationDiaryForm.label4')),\n  });\n  \n\n  const handleSubmit = resetForm => {\n    addProducts({ product, grams });\n    setProduct('');\n    setGrams('');\n    resetForm();\n  };\n  return (\n    <>\n      {isLoggedIn && isMobile && (\n        <StyledLink to=\"/diary\">\n          <MdOutlineKeyboardReturn size={20} />\n        </StyledLink>\n      )}\n      <Formik\n        initialValues={{\n          product: '',\n          grams: '',\n        }}\n        validationSchema={DiaryAddProductSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ event, values, handleChange }) => (\n          <DiaryFormConteiner>\n            <DiaryFormProductConteinerStyled>\n              <DiaryFormProductStyled\n                id=\"product\"\n                name=\"product\"\n                autoComplete=\"off\"\n                disabled={isDisabled}\n                onChange={event => {\n                  handleChangeForm(event, values, handleChange);\n                }}\n                value={product}\n              />\n              <DiaryFormProductLabelStyled htmlFor=\"product\">\n                {t('ProductForm.label_1')}\n              </DiaryFormProductLabelStyled>\n              {product && (\n                <DiaryListProducts\n                  product={product}\n                  setProduct={setProduct}\n                ></DiaryListProducts>\n              )}\n              <FormError name=\"product\" />\n            </DiaryFormProductConteinerStyled>\n            <DiaryFormGramsConteinerStyled>\n              <DiaryFormGramsStyled\n                id=\"grams\"\n                name=\"grams\"\n                autoComplete=\"off\"\n                onChange={event => {\n                  handleChangeForm(event, values, handleChange);\n                }}\n                value={grams}\n                disabled={isDisabled}\n              />\n              <DiaryFormGramsLabelStyled htmlFor=\"grams\">\n                {t('ProductForm.label_2')}\n              </DiaryFormGramsLabelStyled>\n              <FormError name=\"grams\" />\n            </DiaryFormGramsConteinerStyled>\n            <DiaryFormButtonConteiner>\n              <DiaryFormButton type=\"submit\" disabled={isDisabled}>\n                {t('MobileMenu.addBtn')}\n              </DiaryFormButton>\n            </DiaryFormButtonConteiner>\n          </DiaryFormConteiner>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const DiaryListProductsConteinerStyled = styled.div`\n  position: relative;\n`;\n\nexport const DiaryListProductsStyled = styled.ul`\n  z-index: 99;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  margin-top: 53px;\n  padding: 20px;\n  background: #f0f1f3;\n  width: 400px;\n  max-height: 300px;\n  overflow: hidden;\n  border-radius: 3%;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n\n  & li {\n    margin-bottom: 10px;\n    cursor: pointer;\n    :hover, :focus {\n      color: #fc842d;\n    }\n\n  }\n`;\n","import { useState } from 'react';\nimport { useGetAllProductsQuery } from '../../redux/productsApi';\nimport {\n  DiaryListProductsStyled,\n  DiaryListProductsConteinerStyled,\n} from './DiaryListProducts.styled';\n\nexport function DiaryListProducts({ product, setProduct }) {\n  const { data: productsAll } = useGetAllProductsQuery(product);\n  const [open, setOpen] = useState(true);\n\n  const selectedProduct = product => {\n    setProduct(product);\n    setOpen(false);\n  };\n\n  return (\n    <DiaryListProductsConteinerStyled>\n      {open && productsAll && (\n        <DiaryListProductsStyled>\n          {productsAll.map(product => (\n            <li\n              key={product._id}\n              onClick={() => selectedProduct(product.title.ua)}\n            >\n              {product.title.ua}\n            </li>\n          ))}\n        </DiaryListProductsStyled>\n      )}\n    </DiaryListProductsConteinerStyled>\n  );\n}\n","import styled from 'styled-components';\n\nimport bgImageTablet from '../../images/tablet-right-side-bg.png';\nimport bgImageDescktop from '../../images/desktop-right-side-bg.png';\n\nexport const RightSideSection = styled.div`\n  padding-top: 40px;\n  padding-bottom: 54px;\n  background-color: #f0f1f3;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n\n    background-image: url(${bgImageTablet});\n    background-repeat: no-repeat;\n    background-position: top -12px left 399px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 292px;\n    padding-bottom: 193px;\n\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    background-image: url(${bgImageDescktop});\n\n    background-position: top 35px left 12px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 320px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    padding-left: 37px;\n    padding-right: 37px;\n\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    padding-left: 106px;\n    padding-right: 106px;\n\n    width: 517px;\n    min-height: 400px;\n  }\n`;\n\nexport const Summary = styled.div`\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 288px;\n    margin-right: 74px;\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-right: 0;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n\n  font-family: 'Verdana';\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: #212121;\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  width: 100%;\n  display: inline-flex;\n  justify-content: space-between;\n\n  font-family: 'Verdana';\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n\n  &:not(:last-child) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const DietDescription = styled.div`\n  font-family: 'Verdana';\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n`;\n","import React, { useContext } from 'react';\nimport CalloriesContext from 'context/kcalContext';\nimport { useSelector } from 'react-redux';\nimport {\n  RightSideSection,\n  Container,\n  Title,\n  ListItem,\n  List,\n  DietDescription,\n  Summary,\n} from './RightSideBar.styled';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line no-unused-vars\nimport i18n from 'utils/i18next';\n\n\n\nimport { getUser } from '../../redux/auth/auth-selectors';\n\nexport const RightSideBar = () => {\n  // eslint-disable-next-line no-unused-vars\n  const { kcal, setKcal } = useContext(CalloriesContext);\n  const { t } = useTranslation();\n\n  const { date } = useSelector(state => state.dairy);\n  const formattedDate = new Date(date).toLocaleDateString();\n\n  const userCalories = useSelector(getUser).calories;\n  const notRecomended = useSelector(getUser).notAllowedProducts;\n\n  return (\n\n\n    <RightSideSection>\n      <Container>\n        <Summary>\n          <Title>\n            {t('CalloriesText.title_1')} {formattedDate}{' '}\n          </Title>\n          <List>\n            <ListItem>\n              <span>{t('CalloriesText.item_1')}</span>\n              <span> {kcal ? Number(userCalories) - kcal : '0' } {t('CalloriesText.count')}</span>\n            </ListItem>\n            <ListItem>\n              <span>{t('CalloriesText.item_2')}</span>\n              <span> {kcal ? kcal : '0' } {t('CalloriesText.count')}</span>\n            </ListItem>\n            <ListItem>\n              <span>{t('CalloriesText.item_3')}</span>\n              <span>\n                {userCalories === null ? `0 ` : `${userCalories} `}\n                {t('CalloriesText.count')}\n              </span>\n            </ListItem>\n            <ListItem>\n              <span>{t('CalloriesText.item_4')}</span>\n              <span> {kcal ? Math.round((kcal/Number(userCalories)) * 100) : 0 } %</span>\n            </ListItem>\n          </List>\n        </Summary>\n        <div>\n          <Title>{t('CalloriesText.title_2')}</Title>\n          <DietDescription>\n            {notRecomended?.length !== 0 ? (\n              <ul>\n                {' '}\n                {notRecomended?.map((product, index) => (\n                  <li key={index}>{product}</li>\n                ))}\n              </ul>\n            ) : (\n              t('CalloriesText.item_5')\n            )}\n          </DietDescription>\n        </div>\n      </Container>\n    </RightSideSection>\n  );\n};\n","import React from 'react'\nimport { DailyCaloriesForm } from '../components/DailyCaloriesForm/DailyCaloriesForm';\nimport { RightSideBar } from '../components/RightSideBar/RightSideBar';\n\nconst CalculatorPage = () => {\n    return (\n        <>\n            <DailyCaloriesForm publicPage={false} />\n            <RightSideBar />\n        </>\n    );\n}\n\nexport default CalculatorPage;","// const getIsLoggedIn = state => state.authUser.isLoggedIn;\n\nconst getDate = state => state.dairy.date;\n\nexport {\n  // getIsLoggedIn,\n  getDate,\n};\n"],"names":["DailyCaloriesContainer","styled","DailyCaloriesFormContainer","FormStyled","Form","FieldStyled","Field","FieldStyledMobil","FieldStyledTab","FieldRadioGrup","RadioStyled","DailyCaloriesFormTitle","DailyCaloriesFormButton","ButtonCont","ErrorMessageContainer","Radiolabel","RadioGrupLabel","Label","InputLabel","InputContainer","DailyCaloriesForm","publicPage","navigate","useNavigate","dispath","useDispatch","t","useTranslation","user","useSelector","getUser","loading","toggleLoading","initialValues","parameters","height","age","currentWeight","desiredWeight","bloodType","DailyCaloriesSchema","Yup","shape","positive","min","max","integer","required","oneOf","handleSubmit","caloriesCalculator","setTempParameters","refreshParameters","validationSchema","onSubmit","errors","touched","name","type","autoComplete","component","label","htmlFor","id","defaultChecked","value","DiaryFormConteiner","DiaryFormProductStyled","props","disabled","DiaryFormProductConteinerStyled","DiaryFormGramsStyled","DiaryFormGramsConteinerStyled","DiaryFormButtonConteiner","DiaryFormButton","DiaryProductsPlusStyled","DiaryFormProductLabelStyled","DiaryFormGramsLabelStyled","ErrorText","DiaryAddProductForm","useState","product","setProduct","grams","setGrams","isLoggedIn","getLoggedIn","isMobile","useMediaQuery","maxWidth","selectedDate","getDate","isDisabled","Date","toLocaleDateString","useCreateProductsMutation","addProducts","handleChangeForm","event","values","handleChange","target","Error","FormError","render","message","DiaryAddProductSchema","to","size","resetForm","onChange","DiaryListProductsConteinerStyled","DiaryListProductsStyled","DiaryListProducts","productsAll","useGetAllProductsQuery","data","open","setOpen","map","onClick","selectedProduct","title","ua","_id","RightSideSection","bgImageTablet","bgImageDescktop","Container","Summary","Title","List","ListItem","DietDescription","RightSideBar","useContext","CalloriesContext","kcal","setKcal","date","state","dairy","formattedDate","userCalories","calories","notRecomended","notAllowedProducts","Number","Math","round","length","index"],"sourceRoot":""}