{"version":3,"file":"static/js/regisrtation-page.a7ffd5ea.chunk.js","mappings":"qNAqGA,UA9FyB,WACvB,IAAMA,GAAUC,EAAAA,EAAAA,MAEVC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,qCACPC,IAAI,IACJC,SAAS,YACZC,MAAON,EAAAA,KACJM,MAAM,sCACNF,IAAI,IACJC,SAAS,YACZE,SAAUP,EAAAA,KACPG,IAAI,EADG,+CAEPC,IAAI,IACJC,SAAS,cAiBd,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CACEG,cAAe,CAAEN,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDE,iBAAkBV,EAClBW,SAnBe,SAAC,GAMf,IALLR,EAKI,EALJA,KACAI,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAI,EAEI,EAFJA,UACAC,EACI,EADJA,cAEAf,GAAQgB,EAAAA,EAAAA,IAAS,CAAEX,KAAAA,EAAMI,MAAAA,EAAOC,SAAAA,KAChCO,YAAW,WACTH,IACAC,GAAc,KACb,MAKD,UAKE,UAAC,KAAD,CAAMG,UAAU,gBAAhB,WACA,iBAAKA,UAAU,OAAf,WACE,eAAIA,UAAU,YAAd,uBACA,4BACE,kBAAOC,QAAQ,OAAOD,UAAU,YAAhC,qBAGA,SAAC,KAAD,CAAOE,GAAG,OAAOf,KAAK,OAAOgB,KAAK,OAAOH,UAAU,eACnD,SAAC,KAAD,CACEb,KAAK,OACLiB,OAAQ,kBACN,cAAGJ,UAAU,QAAb,4EAIN,4BACE,kBAAOC,QAAQ,QAAQD,UAAU,YAAjC,sBAGA,SAAC,KAAD,CAAOE,GAAG,QAAQf,KAAK,QAAQgB,KAAK,QAAQH,UAAU,eACtD,SAAC,KAAD,CACEb,KAAK,QACLiB,OAAQ,kBAAM,cAAGJ,UAAU,QAAb,0DAGlB,4BACE,kBAAOC,QAAQ,WAAWD,UAAU,YAApC,yBAGA,SAAC,KAAD,CACEE,GAAG,WACHf,KAAK,WACLgB,KAAK,WACLH,UAAU,eAEZ,SAAC,KAAD,CACEb,KAAK,WACLiB,OAAQ,kBAAM,cAAGJ,UAAU,QAAb,mEAKhB,cAAGK,KAAK,iDAAiDL,UAAU,mBAAoBM,KAAK,SAA5F,oBAGA,mBAASH,KAAK,SAASH,UAAU,aAAjC,+B","sources":["pages/RegistrationPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from '../redux/auth/auth-options';\nimport '../style/FormLoginRegistration.css';\nimport { PageContainer } from 'components/PageContainer/PageContainer';\n\nconst RegistrationPage = () => {\n  const dispath = useDispatch();\n\n  const schema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, 'The name is not entered correctly')\n      .max(20)\n      .required('Required'),\n    email: Yup.string()\n      .email('The email is not entered correctly')\n      .max(40)\n      .required('Required'),\n    password: Yup.string()\n      .min(8, `Password should be longer than 8 characters`)\n      .max(20)\n      .required('Required'),\n  });\n\n  const handleSubmit = ({\n    name,\n    email,\n    password,\n    resetForm,\n    setSubmitting,\n  }) => {\n    dispath(register({ name, email, password }));\n    setTimeout(() => {\n      resetForm();\n      setSubmitting(false);\n    }, 100);\n  };\n\n  return (\n    <PageContainer>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className=\"formContainer\">\n        <div className=\"form\">\n          <h1 className=\"formTitle\">Register</h1>\n          <div>\n            <label htmlFor=\"name\" className=\"formLabel\">\n              Name *\n            </label>\n            <Field id=\"name\" name=\"name\" type=\"text\" className=\"formInput\" />\n            <ErrorMessage\n              name=\"name\"\n              render={() => (\n                <p className='alert'>The name must be at least 3 characters and more than 20</p>\n              )}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"email\" className=\"formLabel\">\n              Email *\n            </label>\n            <Field id=\"email\" name=\"email\" type=\"email\" className=\"formInput\" />\n            <ErrorMessage\n              name=\"email\"\n              render={() => <p className='alert'>Email should not exceed 40 characters</p>}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\" className=\"formLabel\">\n              Password *\n            </label>\n            <Field\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              className=\"formInput\"\n            />\n            <ErrorMessage\n              name=\"password\"\n              render={() => <p className='alert'>Password should be longer than 8 characters</p>}\n            />\n          </div>\n          </div>\n          {/* <div className=\"FormButtonContainer\"> */}\n            <a href=\"http://localhost:3000/Slim-Mom-Front-End/login\" className=\"FormButtonActive\"  role=\"button\">\n            Login                     \n            </a>\n            <button  type=\"submit\" className=\"FormButton\">\n              Register\n            </button>\n          {/* </div> */}\n        </Form>\n      </Formik>\n    </PageContainer>\n  );\n};\n\nexport default RegistrationPage;"],"names":["dispath","useDispatch","schema","Yup","shape","name","min","max","required","email","password","initialValues","validationSchema","onSubmit","resetForm","setSubmitting","register","setTimeout","className","htmlFor","id","type","render","href","role"],"sourceRoot":""}