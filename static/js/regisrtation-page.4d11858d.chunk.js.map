{"version":3,"file":"static/js/regisrtation-page.4d11858d.chunk.js","mappings":"yOAyHA,UApGyB,WAEvB,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAUC,EAAAA,EAAAA,MAEVC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KACHG,IAAI,EADD,UACOR,EAAE,mCACZS,IAAI,IACJC,SAAS,YACZC,MAAON,EAAAA,KACJM,MADI,UACKX,EAAE,mCACXS,IAAI,IACJC,SAAS,YACZE,SAAUP,EAAAA,KACPG,IAAI,EADG,UACGR,EAAE,mCACZS,IAAI,IACJC,SAAS,cAiBd,OACE,iCACE,SAAC,KAAD,CACEG,cAAe,CAAEN,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDE,iBAAkBV,EAClBW,SAnBe,SAAC,GAMf,IALLR,EAKI,EALJA,KACAI,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAI,EAEI,EAFJA,UACAC,EACI,EADJA,cAEAf,GAAQgB,EAAAA,EAAAA,IAAS,CAAEX,KAAAA,EAAMI,MAAAA,EAAOC,SAAAA,KAChCO,YAAW,WACTH,IACAC,GAAc,KACb,MAKD,UAKE,UAAC,KAAD,YACA,UAAC,KAAD,YACE,SAAC,KAAD,UAAajB,EAAE,oBACf,UAAC,KAAD,YACE,SAAC,KAAD,CAAWoB,QAAQ,OAAnB,SACGpB,EAAE,uBAEL,SAAC,KAAD,CAAWqB,GAAG,OAAOd,KAAK,OAAOe,KAAK,UACtC,SAAC,KAAD,CACEf,KAAK,OACLgB,OAAQ,kBACN,SAAC,KAAD,UAAQvB,EAAE,0BAIhB,UAAC,KAAD,YACE,SAAC,KAAD,CAAWoB,QAAQ,QAAnB,SACGpB,EAAE,uBAEL,SAAC,KAAD,CAAWqB,GAAG,QAAQd,KAAK,QAAQe,KAAK,WACxC,SAAC,KAAD,CACEf,KAAK,QACLgB,OAAQ,kBAAM,SAAC,KAAD,UAASvB,EAAE,0BAG7B,UAAC,KAAD,YACE,SAAC,KAAD,CAAWoB,QAAQ,WAAnB,SACGpB,EAAE,uBAEL,SAAC,KAAD,CACEqB,GAAG,WACHd,KAAK,WACLe,KAAK,cAEP,SAAC,KAAD,CACEf,KAAK,WACLgB,OAAQ,kBAAM,SAAC,KAAD,UAAQvB,EAAE,6BAM5B,SAAC,KAAD,CAAqBsB,KAAK,SAA1B,SACGtB,EAAE,oBAEL,SAAC,KAAD,CACEwB,KAAK,iDACLC,KAAK,SAFP,SAIGzB,EAAE,yBAKT,SAAC,IAAD","sources":["pages/RegistrationPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from '../redux/auth/auth-options';\nimport { LoginBackground } from 'components/Background/LoginBackground';\nimport {\n  FormContainer,\n  FormTitle,\n  Forma,\n  FormDiv,\n  FormLabel,\n  FormInput,\n  FormButtonA,\n  FormButtonActiveBtn,\n  Alert,\n} from '../style/FormLoginRegistration.styled';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line no-unused-vars\nimport i18n from 'utils/i18next';\n\n\nconst RegistrationPage = () => {\n\n  const { t } = useTranslation();\n  const dispath = useDispatch();\n\n  const schema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, `${t(\"validationRegisterForm.label1\")}`)\n      .max(20)\n      .required('Required'),\n    email: Yup.string()\n      .email(`${t(\"validationRegisterForm.label2\")}`)\n      .max(40)\n      .required('Required'),\n    password: Yup.string()\n      .min(8, `${t(\"validationRegisterForm.label3\")}`)\n      .max(20)\n      .required('Required'),\n  });\n\n  const handleSubmit = ({\n    name,\n    email,\n    password,\n    resetForm,\n    setSubmitting,\n  }) => {\n    dispath(register({ name, email, password }));\n    setTimeout(() => {\n      resetForm();\n      setSubmitting(false);\n    }, 100);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormContainer>\n        <Forma >\n          <FormTitle >{t(\"header.signup\")}</FormTitle>\n          <FormDiv >\n            <FormLabel htmlFor=\"name\" >\n              {t(\"AuthForm.label_1\")}\n            </FormLabel>\n            <FormInput id=\"name\" name=\"name\" type=\"text\"  />\n            <ErrorMessage\n              name=\"name\"\n              render={() => (\n                <Alert>{t(\"notify.alert4\")}</Alert>\n              )}\n            />\n          </FormDiv>\n          <FormDiv >\n            <FormLabel htmlFor=\"email\" >\n              {t(\"AuthForm.label_3\")}\n            </FormLabel>\n            <FormInput id=\"email\" name=\"email\" type=\"email\"  />\n            <ErrorMessage\n              name=\"email\"\n              render={() => <Alert >{t(\"notify.alert3\")}</Alert>}\n            />\n          </FormDiv>\n          <FormDiv>\n            <FormLabel htmlFor=\"password\" >\n              {t(\"AuthForm.label_2\")}\n            </FormLabel>\n            <FormInput\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n            />\n            <ErrorMessage\n              name=\"password\"\n              render={() => <Alert>{t(\"notify.alert2\")}</Alert>}\n            />\n          </FormDiv>\n          </Forma>\n          {/* <div className=\"FormButtonContainer\"> */}\n\n          <FormButtonActiveBtn type=\"submit\" >\n            {t(\"header.signup\")}\n          </FormButtonActiveBtn>\n          <FormButtonA\n            href=\"http://localhost:3000/Slim-Mom-Front-End/login\"          \n            role=\"button\"\n          >\n            {t(\"header.signin\")}\n          </FormButtonA>\n          {/* </div> */}\n        </FormContainer>\n      </Formik>\n      <LoginBackground />\n    </>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["t","useTranslation","dispath","useDispatch","schema","Yup","shape","name","min","max","required","email","password","initialValues","validationSchema","onSubmit","resetForm","setSubmitting","register","setTimeout","htmlFor","id","type","render","href","role"],"sourceRoot":""}