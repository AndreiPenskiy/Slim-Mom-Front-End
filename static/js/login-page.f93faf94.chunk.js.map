{"version":3,"file":"static/js/login-page.f93faf94.chunk.js","mappings":"oNAwFA,UAjFkB,WAChB,IAAMA,GAAUC,EAAAA,EAAAA,MAEVC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,IAAI,IAAIC,SAAS,YAC7CC,SAAUL,EAAAA,KAAaM,IAAI,GAAGH,IAAI,IAAIC,SAAS,cASjD,OACE,SAAC,IAAD,WAEE,SAAC,KAAD,CACEG,cAAe,CAAEL,MAAO,GAAIG,SAAU,IACtCG,iBAAkBT,EAClBU,SAZe,SAAC,GAAoC,IAAlCP,EAAiC,EAAjCA,MAAOG,EAA0B,EAA1BA,SAAUK,EAAgB,EAAhBA,UACvCb,GAAQc,EAAAA,EAAAA,IAAM,CAAET,MAAAA,EAAOG,SAAAA,KACvBK,KAOE,UAKE,UAAC,KAAD,CAAME,UAAU,gBAAhB,WAEE,iBAAKA,UAAU,OAAf,WACE,eAAIA,UAAU,YAAd,sBACA,4BACE,kBAAOC,QAAQ,QAAQD,UAAU,YAAjC,sBAGA,SAAC,KAAD,CACEE,GAAG,QACHC,KAAK,QACLC,KAAK,QACLJ,UAAU,kBAGd,4BACE,kBAAOC,QAAQ,WAAWD,UAAU,YAApC,yBAGA,SAAC,KAAD,CACEE,GAAG,WACHC,KAAK,WACLC,KAAK,WACLJ,UAAU,eAGZ,SAAC,KAAD,CACEG,KAAK,QACLE,OAAQ,kBACN,cAAGL,UAAU,QAAb,sDAEK,SAAC,KAAD,CACPG,KAAK,WACLE,OAAQ,kBACN,cAAGL,UAAU,QAAb,2DAQR,mBAAQI,KAAK,SAASJ,UAAU,mBAAhC,oBAGA,cACEM,KAAK,wDACLN,UAAU,aACVO,KAAK,SAHP,+B","sources":["pages/LoginPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from '../redux/auth/auth-options';\nimport '../style/FormLoginRegistration.css';\nimport { PageContainer } from 'components/PageContainer/PageContainer';\n\nconst LoginPage = () => {\n  const dispath = useDispatch();\n\n  const schema = Yup.object().shape({\n    email: Yup.string().email().max(40).required('Required'),\n    password: Yup.string().min(8).max(20).required('Required'),\n  });\n\n  const handleSubmit = ({ email, password, resetForm }) => {\n    dispath(logIn({ email, password }));    \n    resetForm();\n  };\n\n\n  return (\n    <PageContainer>\n\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className=\"formContainer\">\n          {/* <section className=\"container\"> */}\n          <div className=\"form\">\n            <h1 className=\"formTitle\">Sign in</h1>\n            <div>\n              <label htmlFor=\"email\" className=\"formLabel\">\n                Email *\n              </label>\n              <Field\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                className=\"formInput\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"formLabel\">\n                Password *\n              </label>\n              <Field\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                className=\"formInput\"\n              />\n              {(\n              <ErrorMessage\n                name=\"email\"\n                render={() => (\n                  <p className=\"alert\">Incorrect email or password entered</p>\n                )}\n              />) ||  (<ErrorMessage\n                name=\"password\"\n                render={() => (\n                  <p className=\"alert\">Incorrect email or password entered</p>\n                )}\n              />\n              )}\n            </div>\n          </div>\n          {/* </section> */}\n          {/* <div className=\"FormButtonContainer\"> */}\n          <button type=\"submit\" className=\"FormButtonActive\">\n            Login\n          </button>\n          <a\n            href=\"http://localhost:3000/Slim-Mom-Front-End/registration\"\n            className=\"FormButton\"\n            role=\"button\"\n          >\n            Register\n          </a>\n          {/* </div> */}\n        </Form>\n      </Formik>\n</PageContainer>\n  );\n};\n\nexport default LoginPage;"],"names":["dispath","useDispatch","schema","Yup","shape","email","max","required","password","min","initialValues","validationSchema","onSubmit","resetForm","logIn","className","htmlFor","id","name","type","render","href","role"],"sourceRoot":""}