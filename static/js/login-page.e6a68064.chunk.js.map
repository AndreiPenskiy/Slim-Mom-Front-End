{"version":3,"file":"static/js/login-page.e6a68064.chunk.js","mappings":"qNAgGA,UA/EkB,WAChB,IAAMA,GAAUC,EAAAA,EAAAA,MAEVC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,IAAI,IAAIC,SAAS,YAC7CC,SAAUL,EAAAA,KAAaM,IAAI,GAAGH,IAAI,IAAIC,SAAS,cAQjD,OACE,iCACE,SAAC,KAAD,CACEG,cAAe,CAAEL,MAAO,GAAIG,SAAU,IACtCG,iBAAkBT,EAClBU,SAVe,SAAC,GAAoC,IAAlCP,EAAiC,EAAjCA,MAAOG,EAA0B,EAA1BA,SAAUK,EAAgB,EAAhBA,UACvCb,GAAQc,EAAAA,EAAAA,IAAM,CAAET,MAAAA,EAAOG,SAAAA,KACvBK,KAKE,UAKE,UAAC,KAAD,YAEE,UAAC,KAAD,YACE,SAAC,KAAD,uBACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAWE,QAAQ,QAAnB,sBAGA,SAAC,KAAD,CACEC,GAAG,QACHC,KAAK,QACLC,KAAK,cAGT,UAAC,KAAD,YACE,SAAC,KAAD,CAAWH,QAAQ,WAAnB,yBAGA,SAAC,KAAD,CACEC,GAAG,WACHC,KAAK,WACLC,KAAK,cAGL,SAAC,KAAD,CACED,KAAK,QACLE,OAAQ,kBACN,SAAC,KAAD,uDAIJ,SAAC,KAAD,CACEF,KAAK,WACLE,OAAQ,kBACN,SAAC,KAAD,4DAQV,SAAC,KAAD,CAAqBD,KAAK,SAA1B,oBAGA,SAAC,KAAD,CACEE,KAAK,wDACLC,KAAK,SAFP,4BASJ,SAAC,IAAD","sources":["pages/LoginPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from '../redux/auth/auth-options';\nimport { LoginBackground } from 'components/Background/LoginBackground';\nimport {\n  FormContainer,\n  FormTitle,\n  Forma,\n  FormDiv,\n  FormLabel,\n  FormInput,\n  FormButtonActiveBtn,\n  FormButtonA,\n  Alert,\n} from '../style/FormLoginRegistration.styled';\n\nconst LoginPage = () => {\n  const dispath = useDispatch();\n\n  const schema = Yup.object().shape({\n    email: Yup.string().email().max(40).required('Required'),\n    password: Yup.string().min(8).max(20).required('Required'),\n  });\n\n  const handleSubmit = ({ email, password, resetForm }) => {\n    dispath(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormContainer >\n          {/* <section className=\"container\"> */}\n          <Forma>\n            <FormTitle>Sign in</FormTitle>\n            <FormDiv>\n              <FormLabel htmlFor=\"email\">\n                Email *\n              </FormLabel>\n              <FormInput\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n              />\n            </FormDiv>\n            <FormDiv>\n              <FormLabel htmlFor=\"password\">\n                Password *\n              </FormLabel>\n              <FormInput\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n              />\n              {(\n                <ErrorMessage\n                  name=\"email\"\n                  render={() => (\n                    <Alert >Incorrect email or password entered</Alert>\n                  )}\n                />\n              ) || (\n                <ErrorMessage\n                  name=\"password\"\n                  render={() => (\n                    <Alert >Incorrect email or password entered</Alert>\n                  )}\n                />\n              )}\n            </FormDiv>\n          </Forma>\n          {/* </section> */}\n          {/* <div className=\"FormButtonContainer\"> */}\n          <FormButtonActiveBtn type=\"submit\">\n            Login\n          </FormButtonActiveBtn>\n          <FormButtonA\n            href=\"http://localhost:3000/Slim-Mom-Front-End/registration\"\n            role=\"button\"\n          >\n            Register\n          </FormButtonA>\n          {/* </div> */}\n        </FormContainer>\n      </Formik>\n      <LoginBackground />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["dispath","useDispatch","schema","Yup","shape","email","max","required","password","min","initialValues","validationSchema","onSubmit","resetForm","logIn","htmlFor","id","name","type","render","href","role"],"sourceRoot":""}