{"version":3,"file":"static/js/regisrtation-page.e0b7eb4f.chunk.js","mappings":"uRAUaA,EAAkBC,EAAAA,GAAAA,IAAH,yUAmBfC,EAAID,EAAAA,GAAAA,IAAH,gdAIcE,EAYAC,GASfC,EAAIJ,EAAAA,GAAAA,IAAH,+gBAIcK,EAYAC,GASfC,EAAIP,EAAAA,GAAAA,IAAH,mhBAMcQ,EAUAC,GAUfC,EAAIV,EAAAA,GAAAA,IAAH,+dAIcW,EAYAC,G,SCvHfC,EAAkB,WAC7B,OACE,UAACd,EAAD,YACE,SAACE,EAAD,KACA,SAACG,EAAD,KACA,SAACG,EAAD,KACA,SAACG,EAAD,S,qGCkGN,UAnGyB,WACvB,IAAMI,GAAUC,EAAAA,EAAAA,MAEVC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,qCACPC,IAAI,IACJC,SAAS,YACZC,MAAON,EAAAA,KACJM,MAAM,sCACNF,IAAI,IACJC,SAAS,YACZE,SAAUP,EAAAA,KACPG,IAAI,EADG,+CAEPC,IAAI,IACJC,SAAS,cAiBd,OACE,iCACE,SAAC,KAAD,CACEG,cAAe,CAAEN,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDE,iBAAkBV,EAClBW,SAnBe,SAAC,GAMf,IALLR,EAKI,EALJA,KACAI,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAI,EAEI,EAFJA,UACAC,EACI,EADJA,cAEAf,GAAQgB,EAAAA,EAAAA,IAAS,CAAEX,KAAAA,EAAMI,MAAAA,EAAOC,SAAAA,KAChCO,YAAW,WACTH,IACAC,GAAc,KACb,MAKD,UAKE,UAAC,KAAD,CAAMG,UAAU,gBAAhB,WACA,iBAAKA,UAAU,OAAf,WACE,eAAIA,UAAU,YAAd,uBACA,iBAAKC,KAAG,EAACD,UAAU,UAAnB,WACE,kBAAOE,QAAQ,OAAOF,UAAU,YAAhC,qBAGA,SAAC,KAAD,CAAOG,GAAG,OAAOhB,KAAK,OAAOiB,KAAK,OAAOJ,UAAU,eACnD,SAAC,KAAD,CACEb,KAAK,OACLkB,OAAQ,kBACN,cAAGL,UAAU,QAAb,4EAIN,iBAAKA,UAAU,UAAf,WACE,kBAAOE,QAAQ,QAAQF,UAAU,YAAjC,sBAGA,SAAC,KAAD,CAAOG,GAAG,QAAQhB,KAAK,QAAQiB,KAAK,QAAQJ,UAAU,eACtD,SAAC,KAAD,CACEb,KAAK,QACLkB,OAAQ,kBAAM,cAAGL,UAAU,QAAb,0DAGlB,iBAAKC,KAAG,EAACD,UAAU,UAAnB,WACE,kBAAOE,QAAQ,WAAWF,UAAU,YAApC,yBAGA,SAAC,KAAD,CACEG,GAAG,WACHhB,KAAK,WACLiB,KAAK,WACLJ,UAAU,eAEZ,SAAC,KAAD,CACEb,KAAK,WACLkB,OAAQ,kBAAM,cAAGL,UAAU,QAAb,mEAKlB,cACEM,KAAK,iDACLN,UAAU,mBACVO,KAAK,SAHP,oBAOA,mBAAQH,KAAK,SAASJ,UAAU,aAAhC,4BAMJ,SAAC,IAAD,S","sources":["components/Background/LoginBackground.styled.jsx","components/Background/LoginBackground.js","pages/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport BackgroundStr from './backgroundImages/str.png';\nimport BackgroundL from './backgroundImages/l.png';\nimport BackgroundB from './backgroundImages/b.png';\nimport BackgroundV from './backgroundImages/v.png';\nimport BackgroundStrTab from './backgroundImages/strtab.png';\nimport BackgroundLlTab from './backgroundImages/lltab.png';\nimport BackgroundBTab from './backgroundImages/btab.png';\nimport BackgroundVTab from './backgroundImages/vtab.png';\n\nexport const BackgroundImage = styled.div`\n  display: none;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: -1000;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    min-height: 1024px;\n  }\n  @media screen and (min-width: 1280px) {\n    min-height: 850px;\n  }\n`;\n\nexport const S = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${BackgroundStrTab});\n    display: block;\n    position: absolute;\n    background-size: cover;\n    top: 442px;\n    right: -86px;\n    width: 370px;\n    height: 382px;\n    z-index: 4;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${BackgroundStr});\n    top: 165px;\n    right: 27px;\n    width: 362px;\n    height: 374px;\n    z-index: 2;\n  }\n`;\n\nexport const L = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${BackgroundLlTab});\n    display: block;\n    position: absolute;\n    background-repeat: no-repeat;\n    background-size: contain;\n    top: 0px;\n    right: 50px;\n    width: 740px;\n    height: 842px;\n    z-index: 3;\n  }\n  @media screen and (min-width: 1280px) {\n    background-image: url(${BackgroundL});\n    top: -26px;\n    right: 250px;\n    width: 746px;\n    height: 846px;\n    // transform: rotate(0);\n    z-index: 3;\n  }\n`;\nexport const B = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    display: block;\n    background-image: url(${BackgroundBTab});\n    background-size: contain;\n    background-repeat: no-repeat;\n    top: 533px;\n    right: -212px;\n    width: 740px;\n    height: 527px;\n    z-index: 3;\n  }\n  @media screen and (min-width: 1280px) {\n    background-image: url(${BackgroundB});\n    background-size: unset;\n    top: -30px;\n    right: -287px;\n    width: 773px;\n    height: 552px;\n    z-index: 2;\n  }\n`;\n\nexport const V = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${BackgroundVTab});\n    display: block;\n    position: absolute;\n    background-repeat: no-repeat;\n    top: 428px;\n    right: -0px;\n    width: 553px;\n    height: 750px;\n    background-size: contain;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${BackgroundV});\n    top: 34px;\n    right: 0;\n    width: 603px;\n    height: 816px;\n    z-index: 1;\n  }\n`;\n","import { S, L, B, V, BackgroundImage } from './LoginBackground.styled';\n\nexport const LoginBackground = () => {\n  return (\n    <BackgroundImage>\n      <S />\n      <L />\n      <B />\n      <V />\n    </BackgroundImage>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from '../redux/auth/auth-options';\nimport '../style/FormLoginRegistration.css';\nimport { LoginBackground } from 'components/Background/LoginBackground';\n\nconst RegistrationPage = () => {\n  const dispath = useDispatch();\n\n  const schema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, 'The name is not entered correctly')\n      .max(20)\n      .required('Required'),\n    email: Yup.string()\n      .email('The email is not entered correctly')\n      .max(40)\n      .required('Required'),\n    password: Yup.string()\n      .min(8, `Password should be longer than 8 characters`)\n      .max(20)\n      .required('Required'),\n  });\n\n  const handleSubmit = ({\n    name,\n    email,\n    password,\n    resetForm,\n    setSubmitting,\n  }) => {\n    dispath(register({ name, email, password }));\n    setTimeout(() => {\n      resetForm();\n      setSubmitting(false);\n    }, 100);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className=\"formContainer\">\n        <div className=\"form\">\n          <h1 className=\"formTitle\">Register</h1>\n          <div div className='formDiv'>\n            <label htmlFor=\"name\" className=\"formLabel\">\n              Name *\n            </label>\n            <Field id=\"name\" name=\"name\" type=\"text\" className=\"formInput\" />\n            <ErrorMessage\n              name=\"name\"\n              render={() => (\n                <p className='alert'>The name must be at least 3 characters and more than 20</p>\n              )}\n            />\n          </div>\n          <div className='formDiv'>\n            <label htmlFor=\"email\" className=\"formLabel\">\n              Email *\n            </label>\n            <Field id=\"email\" name=\"email\" type=\"email\" className=\"formInput\" />\n            <ErrorMessage\n              name=\"email\"\n              render={() => <p className='alert'>Email should not exceed 40 characters</p>}\n            />\n          </div>\n          <div div className='formDiv'>\n            <label htmlFor=\"password\" className=\"formLabel\">\n              Password *\n            </label>\n            <Field\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              className=\"formInput\"\n            />\n            <ErrorMessage\n              name=\"password\"\n              render={() => <p className='alert'>Password should be longer than 8 characters</p>}\n            />\n          </div>\n          </div>\n          {/* <div className=\"FormButtonContainer\"> */}\n          <a\n            href=\"http://localhost:3000/Slim-Mom-Front-End/login\"\n            className=\"FormButtonActive\"\n            role=\"button\"\n          >\n            Login\n          </a>\n          <button type=\"submit\" className=\"FormButton\">\n            Register\n          </button>\n          {/* </div> */}\n        </Form>\n      </Formik>\n      <LoginBackground />\n    </>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["BackgroundImage","styled","S","BackgroundStrTab","BackgroundStr","L","BackgroundLlTab","BackgroundL","B","BackgroundBTab","BackgroundB","V","BackgroundVTab","BackgroundV","LoginBackground","dispath","useDispatch","schema","Yup","shape","name","min","max","required","email","password","initialValues","validationSchema","onSubmit","resetForm","setSubmitting","register","setTimeout","className","div","htmlFor","id","type","render","href","role"],"sourceRoot":""}