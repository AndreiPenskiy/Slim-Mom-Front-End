{"version":3,"file":"static/js/calculator-page.53eff674.chunk.js","mappings":"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","sources":["components/DailyCaloriesForm/DailyCaloriesForm.styled.jsx","components/DailyCaloriesForm/DailyCaloriesForm.js","components/RightSideBar/RightSideBar.styled.js","components/RightSideBar/RightSideBar.jsx","pages/CalculatorPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const DailyCaloriesFormContainer = styled.div`\n  width: 280px;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 704px;\n    margin-top: 100px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 608px;\n    margin-top: 147px;\n  }\n`;\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: baseline;\n`;\n\nexport const FieldStyled = styled(Field)`\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 4px 0;\n  width: 240px;\n\n  ::placeholder {\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    color: #9b9faa;\n  }\n\n  @media screen and (max-width: 767px) {\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 0;\n    margin-right: 30px;\n    margin-top: 20px;\n  }\n`;\nexport const FieldStyledMobil = styled(Field)`\n  display: block;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 4px 0;\n  width: 240px;\n  margin-top: 32px;\n\n  ::placeholder {\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    color: #9b9faa;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: none;\n    width: 240px;\n  }\n`;\nexport const FieldStyledTab = styled(Field)`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    border: none;\n    border-bottom: 1px solid #e0e0e0;\n    padding: 20px 0;\n    width: 240px;\n\n  ::placeholder {\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    color: #9b9faa;\n  }\n`;\n\nexport const FieldRadioGrup = styled(Field)`\n  align-items: baseline;\n  // display: flex;\n  // justify-content: space-between;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  width: 240px;\n  @media screen and (max-width: 767px) {\n    margin-top: 32px;\n  }\n`;\n\nexport const RadioStyled = styled.input`\n  appearance: none;\n  background-color: #fff;\n  margin: 0;\n  margin-right: 4px;\n  font: inherit;\n  color: currentColor;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 50%;\n  display: grid;\n  place-content: center;\n  ::before {\n    content: '';\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em #fc842d;\n  }\n  :checked::before {\n    transform: scale(1);\n  }\n`;\nexport const DailyCaloriesFormTitle = styled.h1`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 26px;\n  color: #212121;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 48px;\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 34px;\n    line-height: 41px;\n  }\n`;\nexport const DailyCaloriesFormButton = styled.button`\n  padding: 13px 37px 13px 37px;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  display: block;\n  align-items: center;\n  text-align: center;\n  text-decoration: none;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n  color: #fc842d;\n  background: #ffffff;\n  border: 2px solid #fc842d;\n  border-radius: 30px;\n  margin: auto;\n  margin-top: 40px;\n\n  :hover,\n  :focus {\n    padding: 13px 51px 13px 50px;\n    color: #ffffff;\n    background-color: #fc842d;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n    border-radius: 30px;\n  }\n  @media screen and (min-width: 768px) {\n    margin: 0;\n    margin-top: 60px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: auto;\n    margin-top: 60px;\n  }\n`;\nexport const ButtonCont = styled.div`\n  width: 100%;\n`;\nexport const ErrorMessageContainer = styled.div`\n  color: red;\n  position: absolute;\n  top: 175px;\n  @media screen and (min-width: 768px) {\n    top: 322px;\n  }\n`;\nexport const Radiolabel = styled.label`\n  display: flex;\n  align-items: baseline;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-top: 8px;\n`;\nexport const RadioGrupLabel = styled.div`\n  display: flex;\n  // align-items: baseline;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  width: 240px;\n  justify-content: space-between;\n  border-top: 1px solid #e0e0e0;\n  margin-top: 8px;\n`;\nexport const Label = styled.label`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 20px;\n  display: block;\n  @media screen and (max-width: 767px) {\n    margin-bottom: 8px;\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  DailyCaloriesFormContainer,\n  DailyCaloriesFormTitle,\n  DailyCaloriesFormButton,\n  FieldStyled,\n  Label,\n  FieldStyledTab,\n  FieldStyledMobil,\n  FieldRadioGrup,\n  RadioGrupLabel,\n  RadioStyled,\n  Radiolabel,\n  FormStyled,\n  ButtonCont,\n  ErrorMessageContainer,\n} from './DailyCaloriesForm.styled';\n\nconst DailyCaloriesSchema = Yup.object().shape({\n  height: Yup.number()\n    .min(100, 'Зріст має бути більше ніж 100см!')\n    .max(250, 'Зріст має бути менше ніж 250см!')\n    .required(\"Це поле є обов'язковим!\"),\n  age: Yup.number()\n    .min(18, 'Вік має бути більше ніж 18!')\n    .max(100, 'Вік має бути менше ніж 100!')\n    .required(\"Це поле є обов'язковим!\"),\n  currentWeight: Yup.number()\n    .min(20, 'Вага має бути більше ніж 20!')\n    .max(500, 'Вага має бути менше ніж 500!')\n    .required(\"Це поле є обов'язковим!\"),\n  desiredWeight: Yup.number()\n    .min(20, 'Бажана вага має бути більше ніж 20!')\n    .max(500, 'Бажана вага має бути менше ніж 500!')\n    .required(\"Це поле є обов'язковим!\"),\n  bloodType: Yup.number()\n    .oneOf([1, 2, 3, 4])\n    .required(\"Це поле є обов'язковим!\"),\n});\n\nexport const DailyCaloriesForm = () => (\n  <DailyCaloriesFormContainer>\n    <DailyCaloriesFormTitle>\n      Розрахуйте свою денну норму калорій прямо зараз\n    </DailyCaloriesFormTitle>\n    <Formik\n      initialValues={{\n        height: '',\n        age: '',\n        currentWeight: '',\n        desiredWeight: '',\n        bloodType: '1',\n      }}\n      validationSchema={DailyCaloriesSchema}\n      onSubmit={values => {\n        // same shape as initial values\n        console.log(JSON.stringify(values, null, 2));\n      }}\n    >\n      {({ errors, touched }) => (\n        <FormStyled>\n          <FieldStyled\n            name=\"height\"\n            type=\"number\"\n            autoComplete=\"off\"\n            placeholder=\"Зріст*\"\n          />\n          {errors.height && touched.height ? (\n            <ErrorMessageContainer>{errors.height}</ErrorMessageContainer>\n          ) : null}\n\n          <FieldStyled\n            name=\"desiredWeight\"\n            type=\"number\"\n            autoComplete=\"off\"\n            placeholder=\"Бажана вага*\"\n          />\n\n          {errors.desiredWeight && touched.desiredWeight ? (\n            <ErrorMessageContainer>\n              {errors.desiredWeight}\n            </ErrorMessageContainer>\n          ) : null}\n\n          <FieldStyled\n            name=\"age\"\n            type=\"number\"\n            autoComplete=\"off\"\n            placeholder=\"Вік*\"\n          />\n          {errors.age && touched.age ? (\n            <ErrorMessageContainer>{errors.age}</ErrorMessageContainer>\n          ) : null}\n\n          <FieldStyledMobil\n            name=\"currentWeight\"\n            type=\"number\"\n            autoComplete=\"off\"\n            placeholder=\"Ваша вага*\"\n          />\n\n          {errors.bloodType && touched.bloodType ? (\n            <ErrorMessageContainer>{errors.bloodType}</ErrorMessageContainer>\n          ) : null}\n\n          {/* <RadioGrupLabel> */}\n          {/* Група крові* */}\n          <FieldRadioGrup component=\"div\" name=\"bloodType\" label=\"bloodType\">\n            <Label> Група крові*</Label>\n            <RadioGrupLabel>\n              <Radiolabel htmlFor=\"bloodType\">\n                <RadioStyled\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"1\"\n                  defaultChecked\n                  value=\"1\"\n                />\n                1\n              </Radiolabel>\n              <Radiolabel htmlFor=\"bloodType\">\n                <RadioStyled type=\"radio\" name=\"bloodType\" id=\"2\" value=\"2\" />2\n              </Radiolabel>\n              <Radiolabel htmlFor=\"bloodType\">\n                <RadioStyled type=\"radio\" name=\"bloodType\" id=\"3\" value=\"3\" />3\n              </Radiolabel>\n              <Radiolabel htmlFor=\"bloodType\">\n                <RadioStyled type=\"radio\" name=\"bloodType\" id=\"4\" value=\"4\" />4\n              </Radiolabel>\n            </RadioGrupLabel>\n          </FieldRadioGrup>\n          {/* </RadioGrupLabel> */}\n          {/* </FieldRadioStyled> */}\n\n          <FieldStyledTab\n            name=\"currentWeight\"\n            type=\"number\"\n            autoComplete=\"off\"\n            placeholder=\"Ваша вага*\"\n          />\n\n          {errors.currentWeight && touched.currentWeight ? (\n            <ErrorMessageContainer>\n              {errors.currentWeight}\n            </ErrorMessageContainer>\n          ) : null}\n\n          <ButtonCont>\n            <DailyCaloriesFormButton type=\"submit\">\n              Схуднути\n            </DailyCaloriesFormButton>\n          </ButtonCont>\n        </FormStyled>\n      )}\n    </Formik>\n  </DailyCaloriesFormContainer>\n);\n","import styled from 'styled-components';\n\nimport bgImageTablet from '../../images/tablet-right-side-bg.png';\nimport bgImageDescktop from '../../images/desktop-right-side-bg.png';\n\nexport const RightSideSection = styled.div`\n  padding-top: 40px;\n  padding-bottom: 54px;\n  background-color: #f0f1f3;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n\n    background-image: url(${bgImageTablet});\n    background-repeat: no-repeat;\n    background-position: top -12px left 399px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 292px;\n    padding-bottom: 193px;\n\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    background-image: url(${bgImageDescktop});\n\n    background-position: top 35px left 12px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 320px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    padding-left: 37px;\n    padding-right: 37px;\n\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    padding-left: 106px;\n    padding-right: 106px;\n\n    width: 517px;\n  }\n`;\n\nexport const Summary = styled.div`\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 288px;\n    margin-right: 74px;\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-right: 0;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n\n  font-family: 'Verdana';\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: #212121;\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  width: 100%;\n  display: inline-flex;\n  justify-content: space-between;\n\n  font-family: 'Verdana';\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n\n  &:not(:last-child) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const DietDescription = styled.p`\n  font-family: 'Verdana';\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n`;\n","import React from 'react';\nimport {\n  RightSideSection,\n  Container,\n  Title,\n  ListItem,\n  List,\n  DietDescription,\n  Summary,\n} from './RightSideBar.styled';\n\nexport const RightSideBar = () => {\n  return (\n    <RightSideSection>\n      <Container>\n        <Summary>\n          <Title>Summary for 06/20/2020 </Title>\n          <List>\n            <ListItem>\n              <span>Left</span>\n              <span>000 kcal</span>\n            </ListItem>\n            <ListItem>\n              <span>Consumed</span>\n              <span>000 kcal</span>\n            </ListItem>\n            <ListItem>\n              <span>Daly rate</span>\n              <span>000 kcal</span>\n            </ListItem>\n            <ListItem>\n              <span>n% of normal</span>\n              <span>000 kcal</span>\n            </ListItem>\n          </List>\n        </Summary>\n        <div>\n          <Title>Food not recommended</Title>\n          <DietDescription>Your diet will be displayed here</DietDescription>\n        </div>\n      </Container>\n    </RightSideSection>\n  );\n};\n","import React from 'react'\nimport { DailyCaloriesForm } from '../components/DailyCaloriesForm/DailyCaloriesForm';\nimport { RightSideBar } from '../components/RightSideBar/RightSideBar';\n\nconst CalculatorPage = () => {\n    return (\n        <>\n            <DailyCaloriesForm />\n            <RightSideBar />\n        </>\n    );\n}\n\nexport default CalculatorPage;"],"names":["DailyCaloriesFormContainer","styled","FormStyled","Form","FieldStyled","Field","FieldStyledMobil","FieldStyledTab","FieldRadioGrup","RadioStyled","DailyCaloriesFormTitle","DailyCaloriesFormButton","ButtonCont","ErrorMessageContainer","Radiolabel","RadioGrupLabel","Label","DailyCaloriesSchema","Yup","shape","height","min","max","required","age","currentWeight","desiredWeight","bloodType","oneOf","DailyCaloriesForm","initialValues","validationSchema","onSubmit","values","console","log","JSON","stringify","errors","touched","name","type","autoComplete","placeholder","component","label","htmlFor","id","defaultChecked","value","RightSideSection","bgImageTablet","bgImageDescktop","Container","Summary","Title","List","ListItem","DietDescription","RightSideBar"],"sourceRoot":""}