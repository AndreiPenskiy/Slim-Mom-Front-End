{"version":3,"file":"static/js/regisrtation-page.bfb09b4d.chunk.js","mappings":"mPAqGA,UAhFyB,WACvB,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAUC,EAAAA,EAAAA,MAEVC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KACHG,IAAI,EADD,UACOR,EAAE,mCACZS,IAAI,IACJC,SAAS,YACZC,MAAON,EAAAA,KACJM,MADI,UACKX,EAAE,mCACXS,IAAI,IACJC,SAAS,YACZE,SAAUP,EAAAA,KACPG,IAAI,EADG,UACGR,EAAE,mCACZS,IAAI,IACJC,SAAS,cAGVG,GAAWC,EAAAA,EAAAA,MAOf,OACE,iCACE,SAAC,KAAD,CACEC,cAAe,CAAER,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDI,iBAAkBZ,EAClBa,SAVe,SAAC,GAA+B,IAA7BV,EAA4B,EAA5BA,KAAMI,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnCV,GAAQgB,EAAAA,EAAAA,IAAS,CAAEX,KAAAA,EAAMI,MAAAA,EAAOC,SAAAA,KAChCC,EAAS,WAKP,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAYb,EAAE,oBACd,UAAC,KAAD,YACE,SAAC,KAAD,CAAWmB,QAAQ,OAAnB,SAA2BnB,EAAE,uBAC7B,SAAC,KAAD,CAAWoB,GAAG,OAAOb,KAAK,OAAOc,KAAK,UACtC,SAAC,KAAD,CACEd,KAAK,OACLe,OAAQ,kBAAM,SAAC,KAAD,UAAQtB,EAAE,0BAG5B,UAAC,KAAD,YACE,SAAC,KAAD,CAAWmB,QAAQ,QAAnB,SAA4BnB,EAAE,uBAC9B,SAAC,KAAD,CAAWoB,GAAG,QAAQb,KAAK,QAAQc,KAAK,WACxC,SAAC,KAAD,CACEd,KAAK,QACLe,OAAQ,kBAAM,SAAC,KAAD,UAAQtB,EAAE,0BAG5B,UAAC,KAAD,YACE,SAAC,KAAD,CAAWmB,QAAQ,WAAnB,SAA+BnB,EAAE,uBACjC,SAAC,KAAD,CAAWoB,GAAG,WAAWb,KAAK,WAAWc,KAAK,cAC9C,SAAC,KAAD,CACEd,KAAK,WACLe,OAAQ,kBAAM,SAAC,KAAD,UAAQtB,EAAE,6BAM9B,SAAC,KAAD,CAAqBqB,KAAK,SAA1B,SACGrB,EAAE,oBAEL,SAAC,KAAD,CACEuB,KAAK,iDACLC,KAAK,SAFP,SAIGxB,EAAE,yBAKT,SAAC,IAAD","sources":["pages/RegistrationPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from '../redux/auth/auth-options';\nimport { LoginBackground } from 'components/Background/LoginBackground';\nimport {\n  FormContainer,\n  FormTitle,\n  Forma,\n  FormDiv,\n  FormLabel,\n  FormInput,\n  FormButtonA,\n  FormButtonActiveBtn,\n  Alert,\n} from '../style/FormLoginRegistration.styled';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line no-unused-vars\nimport i18n from 'utils/i18next';\nimport { useNavigate } from 'react-router-dom';\n\nconst RegistrationPage = () => {\n  const { t } = useTranslation();\n  const dispath = useDispatch();\n\n  const schema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, `${t('validationRegisterForm.label1')}`)\n      .max(20)\n      .required('Required'),\n    email: Yup.string()\n      .email(`${t('validationRegisterForm.label2')}`)\n      .max(40)\n      .required('Required'),\n    password: Yup.string()\n      .min(8, `${t('validationRegisterForm.label3')}`)\n      .max(20)\n      .required('Required'),\n  });\n\n  let navigate = useNavigate();\n\n  const handleSubmit = ({ name, email, password }) => {\n    dispath(register({ name, email, password }));\n    navigate('/diary');\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormContainer>\n          <Forma>\n            <FormTitle>{t('header.signup')}</FormTitle>\n            <FormDiv>\n              <FormLabel htmlFor=\"name\">{t('AuthForm.label_1')}</FormLabel>\n              <FormInput id=\"name\" name=\"name\" type=\"text\" />\n              <ErrorMessage\n                name=\"name\"\n                render={() => <Alert>{t('notify.alert4')}</Alert>}\n              />\n            </FormDiv>\n            <FormDiv>\n              <FormLabel htmlFor=\"email\">{t('AuthForm.label_3')}</FormLabel>\n              <FormInput id=\"email\" name=\"email\" type=\"email\" />\n              <ErrorMessage\n                name=\"email\"\n                render={() => <Alert>{t('notify.alert3')}</Alert>}\n              />\n            </FormDiv>\n            <FormDiv>\n              <FormLabel htmlFor=\"password\">{t('AuthForm.label_2')}</FormLabel>\n              <FormInput id=\"password\" name=\"password\" type=\"password\" />\n              <ErrorMessage\n                name=\"password\"\n                render={() => <Alert>{t('notify.alert2')}</Alert>}\n              />\n            </FormDiv>\n          </Forma>\n          {/* <div className=\"FormButtonContainer\"> */}\n\n          <FormButtonActiveBtn type=\"submit\">\n            {t('header.signup')}\n          </FormButtonActiveBtn>\n          <FormButtonA\n            href=\"http://localhost:3000/Slim-Mom-Front-End/login\"\n            role=\"button\"\n          >\n            {t('header.signin')}\n          </FormButtonA>\n          {/* </div> */}\n        </FormContainer>\n      </Formik>\n      <LoginBackground />\n    </>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["t","useTranslation","dispath","useDispatch","schema","Yup","shape","name","min","max","required","email","password","navigate","useNavigate","initialValues","validationSchema","onSubmit","register","htmlFor","id","type","render","href","role"],"sourceRoot":""}