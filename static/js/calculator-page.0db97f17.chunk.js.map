{"version":3,"file":"static/js/calculator-page.0db97f17.chunk.js","mappings":"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","sources":["components/DailyCaloriesForm/DailyCaloriesForm.styled.jsx","components/DailyCaloriesForm/DailyCaloriesForm.js","components/DiaryAddProductForm/DiaryAddProductForm.styled.jsx","components/DiaryAddProductForm/DiaryFormProductMobile.jsx","components/RightSideBar/RightSideBar.styled.js","components/RightSideBar/RightSideBar.jsx","pages/CalculatorPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const DailyCaloriesFormContainer = styled.div`\n  width: 280px;\n  margin-top: 32px;\n  margin-left: 20px;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 704px;\n    margin-top: 100px;\n    margin-left: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 608px;\n    margin-top: 147px;\n    margin-left: 16px;\n  }\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n`;\n\nexport const FieldStyled = styled(Field)`\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  width: 240px;\n  margin-top: 0px;\n\n  :focus {\n    outline: none;\n    border-bottom: 1px solid #fc842d;\n\n    + label {\n      color: #fc842d;\n      font-size: 10px;\n      margin-bottom: 5px;\n      margin-top: -5px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 0px;\n    margin-right: 30px;\n    margin-bottom: 20px;\n\n    :focus {\n      outline: none;\n      border-bottom: 1px solid #fc842d;\n\n      + label {\n        color: #fc842d;\n        font-size: 10px;\n        margin-bottom: 10px;\n        margin-top: -10px;\n      }\n    }\n  }\n`;\n\nexport const FieldStyledMobil = styled.div`\n  display: flex;\n  flex-flow: column-reverse;\n  border: none;\n  margin-top: 20px;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n    width: 240px;\n  }\n`;\n\nexport const FieldStyledTab = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n    display: flex;\n    flex-flow: column-reverse;\n    margin-top: 10px;\n  }\n`;\n\nexport const FieldRadioGrup = styled(Field)`\n  align-items: baseline;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  width: 240px;\n  margin-top: 20px;\n`;\n\nexport const RadioStyled = styled.input`\n  appearance: none;\n  background-color: #fff;\n  margin: 0;\n  margin-right: 4px;\n  font: inherit;\n  color: currentColor;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 50%;\n  display: grid;\n  place-content: center;\n  ::before {\n    content: '';\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em #fc842d;\n  }\n  :checked::before {\n    transform: scale(1);\n  }\n`;\n\nexport const DailyCaloriesFormTitle = styled.h1`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 26px;\n  color: #212121;\n  margin-bottom: 12px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 48px;\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 34px;\n    line-height: 41px;\n  }\n`;\n\nexport const DailyCaloriesFormButton = styled.button`\n  padding: 13px 37px 13px 37px;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  display: block;\n  align-items: center;\n  text-align: center;\n  text-decoration: none;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n  color: #fc842d;\n  background: #ffffff;\n  border: 2px solid #fc842d;\n  border-radius: 30px;\n  margin: auto;\n  margin-top: 40px;\n  transition: transform 500ms linear;\n\n  :hover,\n  :focus {\n    /* padding: 13px 51px 13px 50px; */\n    color: #ffffff;\n    background-color: #fc842d;\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n    border-radius: 30px;\n    transform: scale(0.9);\n  }\n  @media screen and (min-width: 768px) {\n    margin: 0;\n    margin-top: 60px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: auto;\n    margin-top: 60px;\n  }\n`;\n\nexport const ButtonCont = styled.div`\n  width: 100%;\n`;\n\nexport const ErrorMessageContainer = styled.div`\n  position: absolute;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 17px;\n  color: rgb(217 120 74);\n  margin: -17px;\n  padding-left: 16px;\n  @media screen and (min-width: 768px) {\n    margin: 0px;\n    padding-left: 0px;\n  }\n`;\n\nexport const Radiolabel = styled.label`\n  display: flex;\n  align-items: baseline;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-top: 8px;\n`;\n\nexport const RadioGrupLabel = styled.div`\n  display: flex;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  width: 240px;\n  justify-content: space-between;\n  margin-top: 8px;\n\n  @media screen and (min-width: 768px) {\n    border-top: 1px solid #e0e0e0;\n  }\n`;\nexport const Label = styled.label`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 20px;\n  display: block;\n  @media screen and (max-width: 767px) {\n    margin-bottom: 8px;\n  }\n`;\nexport const InputLabel = styled.label`\n  font-family: Verdana;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  DailyCaloriesFormContainer,\n  DailyCaloriesFormTitle,\n  DailyCaloriesFormButton,\n  FieldStyled,\n  Label,\n  InputLabel,\n  InputContainer,\n  FieldStyledTab,\n  FieldStyledMobil,\n  FieldRadioGrup,\n  RadioGrupLabel,\n  RadioStyled,\n  Radiolabel,\n  FormStyled,\n  ButtonCont,\n  ErrorMessageContainer,\n} from './DailyCaloriesForm.styled';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n// eslint-disable-next-line no-unused-vars\nimport i18n from 'utils/i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { caloriesCalculator } from 'redux/products/products-operation';\nimport { setTempParameters, refreshParameters } from 'redux/auth/auth-options';\nimport { getUser } from 'redux/auth/auth-selectors';\nimport { toggleLoading } from 'redux/loader/spinner-slice';\n\nexport const DailyCaloriesForm = ({ publicPage }) => {\n  let navigate = useNavigate();\n  const dispath = useDispatch();\n  const { t } = useTranslation();\n  const user = useSelector(getUser);\n  const loading = useSelector(toggleLoading);\n  \n  const initialValues = user.parameters\n    ? user.parameters\n    : {\n        height: '',\n        age: '',\n        currentWeight: '',\n        desiredWeight: '',\n        bloodType: '1',\n      };\n\n  const DailyCaloriesSchema = Yup.object().shape({\n    height: Yup.number()\n      .positive()\n      .min(100, `${t('validationDiaryForm.label1')}`)\n      .max(250, `${t('validationDiaryForm.label2')}`)\n      .integer(`${t('validationDiaryForm.label3')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    age: Yup.number()\n      .min(18, `${t('validationDiaryForm.label5')}`)\n      .max(100, `${t('validationDiaryForm.label6')}`)\n      .integer(`${t('validationDiaryForm.label7')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    currentWeight: Yup.number()\n      .min(20, `${t('validationDiaryForm.label8')}`)\n      .max(500, `${t('validationDiaryForm.label9')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    desiredWeight: Yup.number()\n      .min(20, `${t('validationDiaryForm.label10')}`)\n      .max(500, `${t('validationDiaryForm.label11')}`)\n      .required(`${t('validationDiaryForm.label4')}`),\n    bloodType: Yup.number()\n      .oneOf([1, 2, 3, 4])\n      .required(`${t('validationDiaryForm.label4')}`),\n  });\n\n  const handleSubmit = async parameters => {\n    dispath(loading)\n    if (publicPage) {\n      \n      await dispath(caloriesCalculator({ parameters }));\n      await dispath(setTempParameters(parameters));\n\n    } else {\n      await dispath(refreshParameters({ parameters }));\n      navigate('/diary');\n      \n    }\n    dispath(loading)\n  };\n  return (\n    \n    <DailyCaloriesFormContainer>\n      <DailyCaloriesFormTitle>\n        {t('dailyCalorieForm.title')}\n      </DailyCaloriesFormTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={DailyCaloriesSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <FormStyled>\n            <InputContainer>\n              <FieldStyled name=\"height\" type=\"number\" autoComplete=\"off\" />\n              <InputLabel>{t('dailyCalorieForm.label_1')}</InputLabel>\n              {errors.height && touched.height ? (\n                <ErrorMessageContainer>{errors.height}</ErrorMessageContainer>\n              ) : null}\n            </InputContainer>\n            <InputContainer>\n              <FieldStyled\n                name=\"desiredWeight\"\n                type=\"number\"\n                autoComplete=\"off\"\n              />\n              <InputLabel>{t('dailyCalorieForm.label_4')}</InputLabel>\n\n              {errors.desiredWeight && touched.desiredWeight ? (\n                <ErrorMessageContainer>\n                  {errors.desiredWeight}\n                </ErrorMessageContainer>\n              ) : null}\n            </InputContainer>\n            <InputContainer>\n              <FieldStyled name=\"age\" type=\"number\" autoComplete=\"off\" />\n              <InputLabel>{t('dailyCalorieForm.label_2')}</InputLabel>\n\n              {errors.age && touched.age ? (\n                <ErrorMessageContainer>{errors.age}</ErrorMessageContainer>\n              ) : null}\n            </InputContainer>\n\n            <FieldStyledMobil>\n              <FieldStyled\n                name=\"currentWeight\"\n                type=\"number\"\n                autoComplete=\"off\"\n              />\n              <InputLabel>{t('dailyCalorieForm.label_3')}</InputLabel>\n\n              {errors.currentWeight && touched.currentWeight ? (\n                <ErrorMessageContainer>\n                  {errors.currentWeight}\n                </ErrorMessageContainer>\n              ) : null}\n            </FieldStyledMobil>\n\n            <FieldRadioGrup component=\"div\" name=\"bloodType\" label=\"bloodType\">\n              <Label> {t('dailyCalorieForm.label_5')}</Label>\n              <RadioGrupLabel>\n                <Radiolabel htmlFor=\"bloodType\">\n                  <RadioStyled\n                    type=\"radio\"\n                    name=\"bloodType\"\n                    id=\"1\"\n                    defaultChecked\n                    value=\"1\"\n                  />\n                  1\n                </Radiolabel>\n                <Radiolabel htmlFor=\"bloodType\">\n                  <RadioStyled type=\"radio\" name=\"bloodType\" id=\"2\" value=\"2\" />\n                  2\n                </Radiolabel>\n                <Radiolabel htmlFor=\"bloodType\">\n                  <RadioStyled type=\"radio\" name=\"bloodType\" id=\"3\" value=\"3\" />\n                  3\n                </Radiolabel>\n                <Radiolabel htmlFor=\"bloodType\">\n                  <RadioStyled type=\"radio\" name=\"bloodType\" id=\"4\" value=\"4\" />\n                  4\n                </Radiolabel>\n              </RadioGrupLabel>\n            </FieldRadioGrup>\n\n            <FieldStyledTab>\n              <FieldStyled\n                name=\"currentWeight\"\n                type=\"number\"\n                autoComplete=\"off\"\n              />\n              <InputLabel>{t('dailyCalorieForm.label_3')}</InputLabel>\n\n              {errors.currentWeight && touched.currentWeight ? (\n                <ErrorMessageContainer>\n                  {errors.currentWeight}\n                </ErrorMessageContainer>\n              ) : null}\n            </FieldStyledTab>\n\n            <ButtonCont>\n              <DailyCaloriesFormButton type=\"submit\">\n                {t('dailyCalorieForm.btn_name')}\n              </DailyCaloriesFormButton>\n            </ButtonCont>\n          </FormStyled>\n        )}\n      </Formik>\n    </DailyCaloriesFormContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const DiaryFormConteiner = styled(Form)`\n  display: flex;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  text-align: end;\n\n  @media screen and (max-width: 767px) {\n    margin-left: 20px;\n    padding-top: 80px;\n    flex-direction: column;\n  }\n`;\n\nexport const DiaryFormProductStyled = styled(Field)`\n  height: 20px;\n  width: 240px;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  border-top: transparent;\n  border-left: transparent;\n  border-right: transparent;\n\n  @media screen and (max-width: 767px) {\n    width: 280px;\n    margin-bottom: 32px;\n    /* ::placeholder {\n      font-family: 'Verdana';\n      font-style: normal;\n      font-weight: 700;\n      font-size: 14px;\n      line-height: 17px;\n      letter-spacing: 0.04em;\n      color: #9b9faa; */\n    /* } */\n  }\n`;\n\nexport const DiaryFormProductConteinerStyled = styled.div`\n  width: 240px;\n  /* position: relative; */\n  margin-right: 50px;\n  /* ::after {\n    position: absolute;\n    content: '';\n    display: block;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n    border: 1px solid #e0e0e0;\n  } */\n`;\n\nexport const DiaryFormGramsStyled = styled(Field)`\n  height: 20px;\n  width: 107px;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  border-top: transparent;\n  border-left: transparent;\n  border-right: transparent;\n  @media screen and (max-width: 767px) {\n    width: 280px;\n  }\n  /* ::placeholder {\n    font-family: 'Verdana';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    color: #9b9faa;\n    text-align: end;\n  } */\n`;\n\nexport const DiaryFormGramsConteinerStyled = styled.div`\n  width: 107px;\n  /* position: relative; */\n  margin-right: 60px;\n  @media screen and (max-width: 767px) {\n    margin-bottom: 60px;\n  }\n  /* ::after {\n    position: absolute;\n    content: '';\n    display: block;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n    border: 1px solid #e0e0e0;\n  } */\n`;\nexport const DiaryFormButtonConteiner = styled.div`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const DiaryFormButton = styled.button`\n  width: 48px;\n  height: 48px;\n  background: #fc842d;\n  border-radius: 50%;\n  cursor: pointer;\n  border: none;\n  transition: transform 500ms linear;\n  :hover {\n    transform: scale(1.1);\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 176px;\n    height: 44px;\n    left: 72px;\n    top: 340px;\n    background: #fc842d;\n    border-radius: 30px;\n\n    font-family: 'Verdana';\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    color: #ffffff;\n  }\n`;\n\nexport const DiaryProductsPlusStyled = styled.img`\n  margin-left: 6px;\n  width: 24px;\n  height: 24px;\n  font-size: bold;\n`;\n\nexport const DiaryFormProductLabelStyled = styled.label`\n  width: 107px;\n  margin-right: 73px;\n`;\n\nexport const DiaryFormGramsLabelStyled = styled.label`\n  margin-right: 54px;\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { useNavigate } from 'react-router';\nimport * as Yup from 'yup';\nimport { useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { MdOutlineKeyboardReturn } from 'react-icons/md';\nimport {\n  DiaryFormConteiner,\n  DiaryFormProductStyled,\n  DiaryFormGramsStyled,\n  DiaryFormProductConteinerStyled,\n  DiaryFormGramsConteinerStyled,\n  DiaryFormButton,\n  DiaryFormProductLabelStyled,\n  DiaryFormGramsLabelStyled,\n  DiaryFormButtonConteiner,\n  ErrorText,\n} from './DiaryAddProductForm.styled';\nimport { StyledLink } from 'components/UserInfo/UserInfo.styled';\nimport { getLoggedIn } from 'redux/auth/auth-selectors';\n\nexport default function DiaryAddProductForm() {\n  const isLoggedIn = useSelector(getLoggedIn);\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  let navigate = useNavigate();\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      ></ErrorMessage>\n    );\n  };\n\n  const DiaryAddProductSchema = Yup.object().shape({\n    product: Yup.string().required(\"Це поле є обов'язковим!\"),\n    grams: Yup.number()\n      .min(1, 'Значення має бути більше 0!')\n      .max(1000, 'Значення має бути меньшим 1000!')\n      .required(\"Це поле є обов'язковим!\"),\n  });\n  return (\n    <>\n      {isLoggedIn && isMobile && (\n        <StyledLink to=\"/diary\">\n          <MdOutlineKeyboardReturn size={20} />\n        </StyledLink>\n      )}\n      <Formik\n        initialValues={{\n          product: '',\n          grams: '',\n        }}\n        validationSchema={DiaryAddProductSchema}\n        onSubmit={(values, { resetForm }) => {\n          console.log('values', values);\n          navigate('/diary', { replace: true });\n          resetForm();\n        }}\n      >\n        <DiaryFormConteiner>\n          <DiaryFormProductConteinerStyled>\n            <DiaryFormProductLabelStyled htmlFor=\"product\">\n              Enter product name\n            </DiaryFormProductLabelStyled>\n            <DiaryFormProductStyled id=\"product\" name=\"product\" />\n            <FormError name=\"product\" />\n          </DiaryFormProductConteinerStyled>\n          <DiaryFormGramsConteinerStyled>\n            <DiaryFormGramsLabelStyled htmlFor=\"grams\">\n              Grams\n            </DiaryFormGramsLabelStyled>\n            <DiaryFormGramsStyled id=\"grams\" name=\"grams\" />\n            <FormError name=\"grams\" />\n          </DiaryFormGramsConteinerStyled>\n          <DiaryFormButtonConteiner>\n            <DiaryFormButton type=\"submit\">Add</DiaryFormButton>\n          </DiaryFormButtonConteiner>\n        </DiaryFormConteiner>\n      </Formik>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nimport bgImageTablet from '../../images/tablet-right-side-bg.png';\nimport bgImageDescktop from '../../images/desktop-right-side-bg.png';\n\nexport const RightSideSection = styled.div`\n  padding-top: 40px;\n  padding-bottom: 54px;\n  background-color: #f0f1f3;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n\n    background-image: url(${bgImageTablet});\n    background-repeat: no-repeat;\n    background-position: top -12px left 399px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 292px;\n    padding-bottom: 193px;\n\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    background-image: url(${bgImageDescktop});\n\n    background-position: top 35px left 12px;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 320px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    padding-left: 37px;\n    padding-right: 37px;\n\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    padding-left: 106px;\n    padding-right: 106px;\n\n    width: 517px;\n    min-height: 400px;\n  }\n`;\n\nexport const Summary = styled.div`\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 288px;\n    margin-right: 74px;\n    margin-bottom: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-right: 0;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n\n  font-family: 'Verdana';\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: #212121;\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  width: 100%;\n  display: inline-flex;\n  justify-content: space-between;\n\n  font-family: 'Verdana';\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n\n  &:not(:last-child) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const DietDescription = styled.div`\n  font-family: 'Verdana';\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  RightSideSection,\n  Container,\n  Title,\n  ListItem,\n  List,\n  DietDescription,\n  Summary,\n} from './RightSideBar.styled';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line no-unused-vars\nimport i18n from 'utils/i18next';\n\nimport { getUser } from '../../redux/auth/auth-selectors';\n\nexport const RightSideBar = () => {\n  const { t } = useTranslation();\n\n  const { date } = useSelector(state => state.dairy);\n  const formattedDate = new Date(date).toLocaleDateString();\n\n  const userCalories = useSelector(getUser).calories;\n  const notRecomended = useSelector(getUser).notAllowedProducts;\n\n  return (\n    <RightSideSection>\n      <Container>\n        <Summary>\n          <Title>\n            {t('CalloriesText.title_1')} {formattedDate}{' '}\n          </Title>\n          <List>\n            <ListItem>\n              <span>{t('CalloriesText.item_1')}</span>\n              <span>000 {t('CalloriesText.count')}</span>\n            </ListItem>\n            <ListItem>\n              <span>{t('CalloriesText.item_2')}</span>\n              <span>000 {t('CalloriesText.count')}</span>\n            </ListItem>\n            <ListItem>\n              <span>{t('CalloriesText.item_3')}</span>\n              <span>\n                {`${userCalories} ` ? `${userCalories} ` : `000 `}\n                {t('CalloriesText.count')}\n              </span>\n            </ListItem>\n            <ListItem>\n              <span>{t('CalloriesText.item_4')}</span>\n              <span>000 %</span>\n            </ListItem>\n          </List>\n        </Summary>\n        <div>\n          <Title>{t('CalloriesText.title_2')}</Title>\n          <DietDescription>\n            {notRecomended?.length !== 0 ? (\n              <ul>\n                {' '}\n                {notRecomended?.map((product, index) => (\n                  <li key={index}>{product}</li>\n                ))}\n              </ul>\n            ) : (\n              t('CalloriesText.item_5')\n            )}\n          </DietDescription>\n        </div>\n      </Container>\n    </RightSideSection>\n  );\n};\n","import React from 'react'\nimport { DailyCaloriesForm } from '../components/DailyCaloriesForm/DailyCaloriesForm';\nimport { RightSideBar } from '../components/RightSideBar/RightSideBar';\n\nconst CalculatorPage = () => {\n    return (\n        <>\n            <DailyCaloriesForm publicPage={false} />\n            <RightSideBar />\n        </>\n    );\n}\n\nexport default CalculatorPage;"],"names":["DailyCaloriesFormContainer","styled","FormStyled","Form","FieldStyled","Field","FieldStyledMobil","FieldStyledTab","FieldRadioGrup","RadioStyled","DailyCaloriesFormTitle","DailyCaloriesFormButton","ButtonCont","ErrorMessageContainer","Radiolabel","RadioGrupLabel","Label","InputLabel","InputContainer","DailyCaloriesForm","publicPage","navigate","useNavigate","dispath","useDispatch","t","useTranslation","user","useSelector","getUser","loading","toggleLoading","initialValues","parameters","height","age","currentWeight","desiredWeight","bloodType","DailyCaloriesSchema","Yup","shape","positive","min","max","integer","required","oneOf","handleSubmit","caloriesCalculator","setTempParameters","refreshParameters","validationSchema","onSubmit","errors","touched","name","type","autoComplete","component","label","htmlFor","id","defaultChecked","value","DiaryFormConteiner","DiaryFormProductStyled","DiaryFormProductConteinerStyled","DiaryFormGramsStyled","DiaryFormGramsConteinerStyled","DiaryFormButtonConteiner","DiaryFormButton","DiaryProductsPlusStyled","DiaryFormProductLabelStyled","DiaryFormGramsLabelStyled","ErrorText","DiaryAddProductForm","isLoggedIn","getLoggedIn","isMobile","useMediaQuery","maxWidth","FormError","render","message","DiaryAddProductSchema","product","grams","to","size","values","resetForm","console","log","replace","RightSideSection","bgImageTablet","bgImageDescktop","Container","Summary","Title","List","ListItem","DietDescription","RightSideBar","date","state","dairy","formattedDate","Date","toLocaleDateString","userCalories","calories","notRecomended","notAllowedProducts","length","map","index"],"sourceRoot":""}